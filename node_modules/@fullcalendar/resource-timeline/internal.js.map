{"version":3,"file":"internal.js","sources":["../src/ExpanderIcon.tsx","../src/SpreadsheetIndividualCell.tsx","../src/SpreadsheetGroupCell.tsx","../src/SpreadsheetRow.tsx","../src/SpreadsheetGroupRow.tsx","../src/SpreadsheetHeader.tsx","../src/ResourceTimelineLane.tsx","../src/DividerRow.tsx","../src/ResourceTimelineLanesBody.tsx","../src/ResourceTimelineLanes.tsx","../src/ResourceTimelineGrid.tsx","../src/ResourceTimelineViewLayout.tsx","../src/ResourceTimelineView.tsx"],"sourcesContent":["import { createElement, VNode, Fragment } from '@fullcalendar/core/preact'\n\n/*\nRenders the DOM responsible for the subrow expander area,\nas well as the space before it (used to align expanders of similar depths)\n*/\nexport function ExpanderIcon({ depth, hasChildren, isExpanded, onExpanderClick }): VNode {\n  let nodes: VNode[] = []\n\n  for (let i = 0; i < depth; i += 1) {\n    nodes.push(\n      <span className=\"fc-icon\" />,\n    )\n  }\n\n  let iconClassNames = ['fc-icon']\n  if (hasChildren) {\n    if (isExpanded) {\n      iconClassNames.push('fc-icon-minus-square')\n    } else {\n      iconClassNames.push('fc-icon-plus-square')\n    }\n  }\n\n  nodes.push(\n    <span\n      className={'fc-datagrid-expander' + (hasChildren ? '' : ' fc-datagrid-expander-placeholder')}\n      onClick={onExpanderClick}\n    >\n      <span className={iconClassNames.join(' ')} />\n    </span>,\n  )\n\n  return createElement(Fragment, {}, ...nodes)\n}\n","import { ViewApi, CssDimValue } from '@fullcalendar/core'\nimport {\n  BaseComponent,\n  memoizeObjArg,\n  ContentContainer,\n  ViewContext,\n} from '@fullcalendar/core/internal'\nimport { createElement, Fragment, ComponentChild } from '@fullcalendar/core/preact'\nimport { ResourceApi } from '@fullcalendar/resource'\nimport { Resource, ColSpec } from '@fullcalendar/resource/internal'\nimport { ExpanderIcon } from './ExpanderIcon.js'\n\nexport interface SpreadsheetIndividualCellProps {\n  colSpec: ColSpec\n  resource: Resource\n  fieldValue: any\n  depth: number\n  hasChildren: boolean\n  isExpanded: boolean\n  innerHeight: CssDimValue\n}\n\n// worth making a PureComponent? (because of innerHeight)\nexport class SpreadsheetIndividualCell extends BaseComponent<SpreadsheetIndividualCellProps> {\n  private refineRenderProps = memoizeObjArg(refineRenderProps)\n\n  render() {\n    let { props, context } = this\n    let { colSpec } = props\n    let renderProps = this.refineRenderProps({\n      resource: props.resource,\n      fieldValue: props.fieldValue,\n      context,\n    })\n\n    return (\n      <ContentContainer\n        elTag=\"td\"\n        elClasses={[\n          'fc-datagrid-cell',\n          'fc-resource',\n        ]}\n        elAttrs={{\n          role: 'gridcell',\n          'data-resource-id': props.resource.id,\n        }}\n        renderProps={renderProps}\n        generatorName={colSpec.isMain ? 'resourceLabelContent' : undefined}\n        generator={colSpec.cellContent || renderResourceInner}\n        classNameGenerator={colSpec.cellClassNames}\n        didMount={colSpec.cellDidMount}\n        willUnmount={colSpec.cellWillUnmount}\n      >\n        {(InnerContent) => (\n          <div className=\"fc-datagrid-cell-frame\" style={{ height: props.innerHeight }}>\n            <div className=\"fc-datagrid-cell-cushion fc-scrollgrid-sync-inner\">\n              {colSpec.isMain && (\n                <ExpanderIcon\n                  depth={props.depth}\n                  hasChildren={props.hasChildren}\n                  isExpanded={props.isExpanded}\n                  onExpanderClick={this.onExpanderClick}\n                />\n              )}\n              <InnerContent\n                elTag=\"span\"\n                elClasses={['fc-datagrid-cell-main']}\n              />\n            </div>\n          </div>\n        )}\n      </ContentContainer>\n    )\n  }\n\n  onExpanderClick = (ev: UIEvent) => {\n    let { props } = this\n\n    if (props.hasChildren) {\n      this.context.dispatch({\n        type: 'SET_RESOURCE_ENTITY_EXPANDED',\n        id: props.resource.id,\n        isExpanded: !props.isExpanded,\n      })\n    }\n  }\n}\n\nfunction renderResourceInner(renderProps: RenderProps): ComponentChild {\n  return renderProps.fieldValue || <Fragment>&nbsp;</Fragment>\n}\n\n// Render Props\n\ninterface RenderPropsInput {\n  resource: Resource\n  fieldValue: any\n  context: ViewContext\n}\n\ninterface RenderProps {\n  resource: ResourceApi\n  fieldValue: any\n  view: ViewApi\n}\n\nfunction refineRenderProps(input: RenderPropsInput): RenderProps {\n  return {\n    resource: new ResourceApi(input.context, input.resource),\n    fieldValue: input.fieldValue,\n    view: input.context.viewApi,\n  }\n}\n","import { BaseComponent, ContentContainer } from '@fullcalendar/core/internal'\nimport { ComponentChild, createElement, Fragment } from '@fullcalendar/core/preact'\nimport { ColSpec, ColCellContentArg } from '@fullcalendar/resource'\n\nexport interface SpreadsheetGroupCellProps {\n  colSpec: ColSpec\n  fieldValue: any\n  rowSpan: number\n}\n\n// for VERTICAL cell grouping, in spreadsheet area\nexport class SpreadsheetGroupCell extends BaseComponent<SpreadsheetGroupCellProps> {\n  render() {\n    let { props, context } = this\n    let { colSpec } = props\n    let renderProps: ColCellContentArg = {\n      groupValue: props.fieldValue,\n      view: context.viewApi,\n    }\n\n    // a grouped cell. no data that is specific to this specific resource\n    // `colSpec` is for the group. a GroupSpec :(\n    return (\n      <ContentContainer\n        elTag=\"td\"\n        elClasses={[\n          'fc-datagrid-cell',\n          'fc-resource-group',\n        ]}\n        elAttrs={{\n          role: 'gridcell',\n          rowSpan: props.rowSpan,\n        }}\n        renderProps={renderProps}\n        generatorName=\"resourceGroupLabelContent\"\n        generator={colSpec.cellContent || renderGroupInner}\n        classNameGenerator={colSpec.cellClassNames}\n        didMount={colSpec.cellDidMount}\n        willUnmount={colSpec.cellWillUnmount}\n      >\n        {(InnerContent) => (\n          <div className=\"fc-datagrid-cell-frame fc-datagrid-cell-frame-liquid\">\n            <InnerContent\n              elTag=\"div\"\n              elClasses={['fc-datagrid-cell-cushion', 'fc-sticky']}\n            />\n          </div>\n        )}\n      </ContentContainer>\n    )\n  }\n}\n\nfunction renderGroupInner(renderProps: ColCellContentArg): ComponentChild {\n  return renderProps.groupValue || <Fragment>&nbsp;</Fragment>\n}\n","import { CssDimValue } from '@fullcalendar/core'\nimport { BaseComponent, ViewContext, isArraysEqual } from '@fullcalendar/core/internal'\nimport { createElement } from '@fullcalendar/core/preact'\nimport { Resource, buildResourceFields, ColSpec, getPublicId } from '@fullcalendar/resource/internal'\nimport { SpreadsheetIndividualCell } from './SpreadsheetIndividualCell.js'\nimport { SpreadsheetGroupCell } from './SpreadsheetGroupCell.js'\n\nexport interface SpreadsheetRowProps {\n  colSpecs: ColSpec[]\n  rowSpans: number[]\n  depth: number\n  isExpanded: boolean\n  hasChildren: boolean\n  resource: Resource\n  innerHeight: CssDimValue // bad name! inner vs innerinner\n}\n\nexport class SpreadsheetRow extends BaseComponent<SpreadsheetRowProps, ViewContext> {\n  render() {\n    let { props } = this\n    let { resource, rowSpans, depth } = props\n    let resourceFields = buildResourceFields(resource) // slightly inefficient. already done up the call stack\n\n    return (\n      <tr role=\"row\">\n        {props.colSpecs.map((colSpec, i) => {\n          let rowSpan = rowSpans[i]\n\n          if (rowSpan === 0) { // not responsible for group-based rows. VRowGroup is\n            return null\n          }\n\n          if (rowSpan == null) {\n            rowSpan = 1\n          }\n\n          let fieldValue = colSpec.field ? resourceFields[colSpec.field] :\n            (resource.title || getPublicId(resource.id))\n\n          if (rowSpan > 1) {\n            return (\n              <SpreadsheetGroupCell\n                key={i} // eslint-disable-line react/no-array-index-key\n                colSpec={colSpec}\n                fieldValue={fieldValue}\n                rowSpan={rowSpan}\n              />\n            )\n          }\n\n          return (\n            <SpreadsheetIndividualCell\n              key={i} // eslint-disable-line react/no-array-index-key\n              colSpec={colSpec}\n              resource={resource}\n              fieldValue={fieldValue}\n              depth={depth}\n              hasChildren={props.hasChildren}\n              isExpanded={props.isExpanded}\n              innerHeight={props.innerHeight}\n            />\n          )\n        })}\n      </tr>\n    )\n  }\n}\n\nSpreadsheetRow.addPropsEquality({\n  rowSpans: isArraysEqual,\n})\n","import { CssDimValue } from '@fullcalendar/core'\nimport { BaseComponent, ViewContext, ContentContainer } from '@fullcalendar/core/internal'\nimport { createElement, Fragment, createRef, RefObject, ComponentChild } from '@fullcalendar/core/preact'\nimport { ColCellContentArg } from '@fullcalendar/resource'\nimport { Group, isGroupsEqual } from '@fullcalendar/resource/internal'\nimport { ExpanderIcon } from './ExpanderIcon.js'\n\nexport interface SpreadsheetGroupRowProps {\n  spreadsheetColCnt: number\n  id: string // 'field:value'\n  isExpanded: boolean\n  group: Group\n  innerHeight: CssDimValue\n}\n\n// for HORIZONTAL cell grouping, in spreadsheet area\nexport class SpreadsheetGroupRow extends BaseComponent<SpreadsheetGroupRowProps, ViewContext> {\n  innerInnerRef: RefObject<HTMLDivElement> = createRef<HTMLDivElement>()\n\n  render() {\n    let { props, context } = this\n    let renderProps: ColCellContentArg = { groupValue: props.group.value, view: context.viewApi }\n    let spec = props.group.spec\n\n    return (\n      <tr role=\"row\">\n        <ContentContainer\n          elTag=\"th\"\n          elClasses={[\n            'fc-datagrid-cell',\n            'fc-resource-group',\n            context.theme.getClass('tableCellShaded'),\n          ]}\n          elAttrs={{\n            // ARIA TODO: not really a columnheader\n            // extremely tedious to make this aria-compliant,\n            // to assign multiple headers to each cell\n            // https://www.w3.org/WAI/tutorials/tables/multi-level/\n            role: 'columnheader',\n            scope: 'colgroup',\n            colSpan: props.spreadsheetColCnt,\n          }}\n          renderProps={renderProps}\n          generatorName=\"resourceGroupLabelContent\"\n          generator={spec.labelContent || renderCellInner}\n          classNameGenerator={spec.labelClassNames}\n          didMount={spec.labelDidMount}\n          willUnmount={spec.labelWillUnmount}\n        >\n          {(InnerContent) => (\n            <div className=\"fc-datagrid-cell-frame\" style={{ height: props.innerHeight }}>\n              <div className=\"fc-datagrid-cell-cushion fc-scrollgrid-sync-inner\" ref={this.innerInnerRef}>\n                <ExpanderIcon\n                  depth={0}\n                  hasChildren\n                  isExpanded={props.isExpanded}\n                  onExpanderClick={this.onExpanderClick}\n                />\n                <InnerContent\n                  elTag=\"span\"\n                  elClasses={['fc-datagrid-cell-main']}\n                />\n              </div>\n            </div>\n          )}\n        </ContentContainer>\n      </tr>\n    )\n  }\n\n  onExpanderClick = () => {\n    let { props } = this\n\n    this.context.dispatch({\n      type: 'SET_RESOURCE_ENTITY_EXPANDED',\n      id: props.id,\n      isExpanded: !props.isExpanded,\n    })\n  }\n}\n\nSpreadsheetGroupRow.addPropsEquality({\n  group: isGroupsEqual,\n})\n\nfunction renderCellInner(renderProps: ColCellContentArg): ComponentChild {\n  return renderProps.groupValue || <Fragment>&nbsp;</Fragment>\n}\n","import {\n  BaseComponent, ElementDragging, elementClosest, PointerDragEvent, RefMap, findElements,\n  ContentContainer,\n} from '@fullcalendar/core/internal'\nimport {\n  VNode, createElement, Fragment,\n} from '@fullcalendar/core/preact'\nimport { ColSpec, ColHeaderContentArg, ColHeaderRenderHooks } from '@fullcalendar/resource'\n\nexport interface SpreadsheetHeaderProps {\n  superHeaderRendering: ColHeaderRenderHooks\n  colSpecs: ColSpec[]\n  rowInnerHeights: number[]\n  onColWidthChange?: (colWidths: number[]) => void\n}\n\nconst SPREADSHEET_COL_MIN_WIDTH = 20\n\nexport class SpreadsheetHeader extends BaseComponent<SpreadsheetHeaderProps> {\n  private resizerElRefs = new RefMap<HTMLElement>(this._handleColResizerEl.bind(this))\n  private colDraggings: { [index: string]: ElementDragging } = {}\n\n  render() {\n    let { colSpecs, superHeaderRendering, rowInnerHeights } = this.props\n    let renderProps: ColHeaderContentArg = { view: this.context.viewApi }\n    let rowNodes: VNode[] = []\n\n    rowInnerHeights = rowInnerHeights.slice() // copy, because we're gonna pop\n\n    if (superHeaderRendering) {\n      let rowInnerHeight = rowInnerHeights.shift()\n\n      rowNodes.push(\n        <tr key=\"row-super\" role=\"row\">\n          <ContentContainer\n            elTag=\"th\"\n            elClasses={[\n              'fc-datagrid-cell',\n              'fc-datagrid-cell-super',\n            ]}\n            elAttrs={{\n              role: 'columnheader',\n              scope: 'colgroup',\n              colSpan: colSpecs.length,\n            }}\n            renderProps={renderProps}\n            generatorName=\"resourceAreaHeaderContent\"\n            generator={superHeaderRendering.headerContent}\n            classNameGenerator={superHeaderRendering.headerClassNames}\n            didMount={superHeaderRendering.headerDidMount}\n            willUnmount={superHeaderRendering.headerWillUnmount}\n          >\n            {(InnerContent) => (\n              <div className=\"fc-datagrid-cell-frame\" style={{ height: rowInnerHeight }}>\n                <InnerContent\n                  elTag=\"div\"\n                  elClasses={['fc-datagrid-cell-cushion', 'fc-scrollgrid-sync-inner']}\n                />\n              </div>\n            )}\n          </ContentContainer>\n        </tr>,\n      )\n    }\n\n    let rowInnerHeight = rowInnerHeights.shift()\n    rowNodes.push(\n      <tr key=\"row\" role=\"row\">\n        {colSpecs.map((colSpec, i) => {\n          let isLastCol = i === (colSpecs.length - 1)\n\n          // need empty inner div for abs positioning for resizer\n          return (\n            <ContentContainer\n              key={i} // eslint-disable-line react/no-array-index-key\n              elTag=\"th\"\n              elClasses={['fc-datagrid-cell']}\n              elAttrs={{ role: 'columnheader' }}\n              renderProps={renderProps}\n              generatorName=\"resourceAreaHeaderContent\"\n              generator={colSpec.headerContent}\n              classNameGenerator={colSpec.headerClassNames}\n              didMount={colSpec.headerDidMount}\n              willUnmount={colSpec.headerWillUnmount}\n            >\n              {(InnerContent) => (\n                <div className=\"fc-datagrid-cell-frame\" style={{ height: rowInnerHeight }}>\n                  <div className=\"fc-datagrid-cell-cushion fc-scrollgrid-sync-inner\">\n                    {colSpec.isMain && (\n                      <span className=\"fc-datagrid-expander fc-datagrid-expander-placeholder\">\n                        <span className=\"fc-icon\" />\n                      </span>\n                    )}\n                    <InnerContent\n                      elTag=\"span\"\n                      elClasses={['fc-datagrid-cell-main']}\n                    />\n                  </div>\n                  {!isLastCol && (\n                    <div className=\"fc-datagrid-cell-resizer\" ref={this.resizerElRefs.createRef(i)} />\n                  )}\n                </div>\n              )}\n            </ContentContainer>\n          )\n        })}\n      </tr>,\n    )\n\n    return (<Fragment>{rowNodes}</Fragment>)\n  }\n\n  _handleColResizerEl(resizerEl: HTMLElement | null, index: string) {\n    let { colDraggings } = this\n\n    if (!resizerEl) {\n      let dragging = colDraggings[index]\n\n      if (dragging) {\n        dragging.destroy()\n        delete colDraggings[index]\n      }\n    } else {\n      let dragging = this.initColResizing(resizerEl, parseInt(index, 10))\n\n      if (dragging) {\n        colDraggings[index] = dragging\n      }\n    }\n  }\n\n  initColResizing(resizerEl: HTMLElement, index: number) {\n    let { pluginHooks, isRtl } = this.context\n    let { onColWidthChange } = this.props\n    let ElementDraggingImpl = pluginHooks.elementDraggingImpl\n\n    if (ElementDraggingImpl) {\n      let dragging = new ElementDraggingImpl(resizerEl)\n      let startWidth: number // of just the single column\n      let currentWidths: number[] // of all columns\n\n      dragging.emitter.on('dragstart', () => {\n        let allCells = findElements(elementClosest(resizerEl, 'tr'), 'th')\n\n        currentWidths = allCells.map((cellEl) => (\n          cellEl.getBoundingClientRect().width\n        ))\n        startWidth = currentWidths[index]\n      })\n\n      dragging.emitter.on('dragmove', (pev: PointerDragEvent) => {\n        currentWidths[index] = Math.max(startWidth + pev.deltaX * (isRtl ? -1 : 1), SPREADSHEET_COL_MIN_WIDTH)\n\n        if (onColWidthChange) {\n          onColWidthChange(currentWidths.slice()) // send a copy since currentWidths continues to be mutated\n        }\n      })\n\n      dragging.setAutoScrollEnabled(false) // because gets weird with auto-scrolling time area\n\n      return dragging\n    }\n\n    return null\n  }\n}\n","import { CssDimValue } from '@fullcalendar/core'\nimport {\n  BaseComponent,\n  elementClosest, memoizeObjArg, ContentContainer,\n} from '@fullcalendar/core/internal'\nimport { createElement, Ref } from '@fullcalendar/core/preact'\nimport { Resource, refineRenderProps } from '@fullcalendar/resource/internal'\nimport { TimelineLane, TimelineLaneCoreProps } from '@fullcalendar/timeline/internal'\n\nexport interface ResourceTimelineLaneProps extends TimelineLaneCoreProps {\n  elRef: Ref<HTMLTableRowElement>\n  resource: Resource\n  innerHeight: CssDimValue\n  onHeightChange?: (rowEl: HTMLTableRowElement, isStable: boolean) => void\n}\n\nexport class ResourceTimelineLane extends BaseComponent<ResourceTimelineLaneProps> {\n  private refineRenderProps = memoizeObjArg(refineRenderProps)\n\n  render() {\n    let { props, context } = this\n    let { options } = context\n    let renderProps = this.refineRenderProps({ resource: props.resource, context })\n\n    return (\n      <tr ref={props.elRef}>\n        <ContentContainer\n          elTag=\"td\"\n          elClasses={[\n            'fc-timeline-lane',\n            'fc-resource',\n          ]}\n          elAttrs={{\n            'data-resource-id': props.resource.id,\n          }}\n          renderProps={renderProps}\n          generatorName=\"resourceLaneContent\"\n          generator={options.resourceLaneContent}\n          classNameGenerator={options.resourceLaneClassNames}\n          didMount={options.resourceLaneDidMount}\n          willUnmount={options.resourceLaneWillUnmount}\n        >\n          {(InnerContent) => (\n            <div className=\"fc-timeline-lane-frame\" style={{ height: props.innerHeight }}>\n              <InnerContent\n                elTag=\"div\"\n                elClasses={['fc-timeline-lane-misc']}\n              />\n              <TimelineLane\n                dateProfile={props.dateProfile}\n                tDateProfile={props.tDateProfile}\n                nowDate={props.nowDate}\n                todayRange={props.todayRange}\n                nextDayThreshold={props.nextDayThreshold}\n                businessHours={props.businessHours}\n                eventStore={props.eventStore}\n                eventUiBases={props.eventUiBases}\n                dateSelection={props.dateSelection}\n                eventSelection={props.eventSelection}\n                eventDrag={props.eventDrag}\n                eventResize={props.eventResize}\n                timelineCoords={props.timelineCoords}\n                onHeightChange={this.handleHeightChange}\n                resourceId={props.resource.id}\n              />\n            </div>\n          )}\n        </ContentContainer>\n      </tr>\n    ) // important NOT to do liquid-height. dont want to shrink height smaller than content\n  }\n\n  handleHeightChange = (innerEl: HTMLElement, isStable: boolean) => {\n    if (this.props.onHeightChange) {\n      this.props.onHeightChange(\n        // would want to use own <tr> ref, but not guaranteed to be ready when this fires\n        elementClosest(innerEl, 'tr') as HTMLTableRowElement,\n        isStable,\n      )\n    }\n  }\n}\n","import { CssDimValue } from '@fullcalendar/core'\nimport { BaseComponent, ContentContainer } from '@fullcalendar/core/internal'\nimport { createElement, Ref } from '@fullcalendar/core/preact'\nimport { GroupLaneRenderHooks, ColCellContentArg } from '@fullcalendar/resource'\n\nexport interface DividerRowProps {\n  elRef?: Ref<HTMLTableRowElement>\n  innerHeight: CssDimValue\n  groupValue: any\n  renderHooks: GroupLaneRenderHooks\n}\n\n/*\nparallels the SpreadsheetGroupRow\n*/\nexport class DividerRow extends BaseComponent<DividerRowProps> {\n  render() {\n    let { props, context } = this\n    let { renderHooks } = props\n    let renderProps: ColCellContentArg = {\n      groupValue: props.groupValue,\n      view: context.viewApi,\n    }\n\n    return (\n      <tr ref={props.elRef}>\n        <ContentContainer\n          elTag=\"td\"\n          elRef={props.elRef}\n          elClasses={[\n            'fc-timeline-lane',\n            'fc-resource-group',\n            context.theme.getClass('tableCellShaded'),\n          ]}\n          renderProps={renderProps}\n          generatorName=\"resourceGroupLaneContent\"\n          generator={renderHooks.laneContent}\n          classNameGenerator={renderHooks.laneClassNames}\n          didMount={renderHooks.laneDidMount}\n          willUnmount={renderHooks.laneWillUnmount}\n        >\n          {(InnerContainer) => (\n            <InnerContainer\n              elTag=\"div\"\n              elStyle={{ height: props.innerHeight }}\n            />\n          )}\n        </ContentContainer>\n      </tr>\n    )\n  }\n}\n","import {\n  SplittableProps, EventStore, BaseComponent, RefMap,\n  DateMarker, DateRange, DateProfile,\n} from '@fullcalendar/core/internal'\nimport { createElement } from '@fullcalendar/core/preact'\nimport { GroupNode, ResourceNode } from '@fullcalendar/resource/internal'\nimport { TimelineDateProfile, TimelineCoords } from '@fullcalendar/timeline/internal'\nimport { ResourceTimelineLane } from './ResourceTimelineLane.js'\nimport { DividerRow } from './DividerRow.js'\n\nexport interface ResourceTimelineLanesBodyProps extends ResourceTimelineLanesContentProps {\n  rowElRefs: RefMap<HTMLElement> // indexed by NUMERICAL INDEX, not node.id\n}\n\nexport interface ResourceTimelineLanesContentProps {\n  rowNodes: (GroupNode | ResourceNode)[]\n  splitProps: { [resourceId: string]: SplittableProps }\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  nowDate: DateMarker\n  todayRange: DateRange\n  fallbackBusinessHours: EventStore | null\n  innerHeights: number[]\n  slatCoords: TimelineCoords | null\n  onRowHeightChange?: (rowEl: HTMLTableRowElement, isStable: boolean) => void\n}\n\nexport class ResourceTimelineLanesBody extends BaseComponent<ResourceTimelineLanesBodyProps> { // TODO: this technique more\n  render() {\n    let { props, context } = this\n    let { rowElRefs, innerHeights } = props\n\n    return (\n      <tbody>\n        {props.rowNodes.map((node, index) => {\n          if ((node as GroupNode).group) {\n            return (\n              <DividerRow\n                key={node.id}\n                elRef={rowElRefs.createRef(node.id)}\n                groupValue={(node as GroupNode).group.value}\n                renderHooks={(node as GroupNode).group.spec}\n                innerHeight={innerHeights[index] || ''}\n              />\n            )\n          }\n\n          if ((node as ResourceNode).resource) {\n            let resource = (node as ResourceNode).resource\n\n            return (\n              <ResourceTimelineLane\n                key={node.id}\n                elRef={rowElRefs.createRef(node.id)}\n                {...props.splitProps[resource.id]}\n                resource={resource}\n                dateProfile={props.dateProfile}\n                tDateProfile={props.tDateProfile}\n                nowDate={props.nowDate}\n                todayRange={props.todayRange}\n                nextDayThreshold={context.options.nextDayThreshold}\n                businessHours={resource.businessHours || props.fallbackBusinessHours}\n                innerHeight={innerHeights[index] || ''}\n                timelineCoords={props.slatCoords}\n                onHeightChange={props.onRowHeightChange}\n              />\n            )\n          }\n\n          return null\n        })}\n      </tbody>\n    )\n  }\n}\n","import { CssDimValue } from '@fullcalendar/core'\nimport { PositionCache, BaseComponent, RefMap } from '@fullcalendar/core/internal'\nimport { createElement, createRef } from '@fullcalendar/core/preact'\nimport { GroupNode, ResourceNode } from '@fullcalendar/resource/internal'\nimport { ResourceTimelineLanesBody, ResourceTimelineLanesContentProps } from './ResourceTimelineLanesBody.js'\n\nexport interface ResourceTimelineLanesProps extends ResourceTimelineLanesContentProps {\n  minHeight: CssDimValue\n  clientWidth: number | null\n  tableMinWidth: CssDimValue\n  onRowCoords?: (rowCoords: PositionCache) => void\n}\n\nexport class ResourceTimelineLanes extends BaseComponent<ResourceTimelineLanesProps> {\n  private rootElRef = createRef<HTMLTableElement>()\n  private rowElRefs = new RefMap<HTMLElement>()\n\n  render() {\n    let { props, context } = this\n\n    return (\n      <table\n        ref={this.rootElRef}\n        aria-hidden\n        className={'fc-scrollgrid-sync-table ' + context.theme.getClass('table')}\n        style={{\n          minWidth: props.tableMinWidth,\n          width: props.clientWidth,\n          height: props.minHeight,\n        }}\n      >\n        <ResourceTimelineLanesBody\n          rowElRefs={this.rowElRefs}\n          rowNodes={props.rowNodes}\n          dateProfile={props.dateProfile}\n          tDateProfile={props.tDateProfile}\n          nowDate={props.nowDate}\n          todayRange={props.todayRange}\n          splitProps={props.splitProps}\n          fallbackBusinessHours={props.fallbackBusinessHours}\n          slatCoords={props.slatCoords}\n          innerHeights={props.innerHeights}\n          onRowHeightChange={props.onRowHeightChange}\n        />\n      </table>\n    )\n  }\n\n  componentDidMount() {\n    this.updateCoords()\n  }\n\n  componentDidUpdate() {\n    this.updateCoords()\n  }\n\n  componentWillUnmount() {\n    if (this.props.onRowCoords) {\n      this.props.onRowCoords(null)\n    }\n  }\n\n  updateCoords() {\n    let { props } = this\n\n    if (props.onRowCoords && props.clientWidth !== null) { // a populated clientWidth means sizing has stabilized\n      this.props.onRowCoords(\n        new PositionCache(\n          this.rootElRef.current,\n          collectRowEls(this.rowElRefs.currentMap, props.rowNodes),\n          false,\n          true, // isVertical\n        ),\n      )\n    }\n  }\n}\n\nfunction collectRowEls(elMap: { [key: string]: HTMLElement }, rowNodes: (GroupNode | ResourceNode)[]) {\n  return rowNodes.map((rowNode) => elMap[rowNode.id])\n}\n","import { Duration, CssDimValue } from '@fullcalendar/core'\nimport {\n  PositionCache, EventStore, DateSpan, EventUiHash, EventInteractionState,\n  DateComponent, Hit, memoize, NowTimer, greatestDurationDenominator,\n  DateMarker, DateRange, NowIndicatorContainer, DateProfile,\n} from '@fullcalendar/core/internal'\nimport { createElement, createRef, VNode, Fragment } from '@fullcalendar/core/preact'\nimport { ResourceHash, GroupNode, ResourceNode, ResourceSplitter } from '@fullcalendar/resource/internal'\nimport {\n  TimelineDateProfile, TimelineCoords, TimelineSlats,\n  TimelineLaneSlicer, TimelineLaneBg, TimelineLaneSeg,\n  coordToCss,\n} from '@fullcalendar/timeline/internal'\nimport { ResourceTimelineLanes } from './ResourceTimelineLanes.js'\n\nexport interface ResourceTimelineGridProps {\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  rowNodes: (GroupNode | ResourceNode)[]\n  businessHours: EventStore | null\n  dateSelection: DateSpan | null\n  eventStore: EventStore\n  eventUiBases: EventUiHash\n  eventSelection: string\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n  resourceStore: ResourceHash\n  nextDayThreshold: Duration\n  clientWidth: number | null\n  clientHeight: number | null\n  tableMinWidth: CssDimValue\n  tableColGroupNode: VNode\n  expandRows: boolean\n  rowInnerHeights: number[]\n  onSlatCoords?: (slatCoords: TimelineCoords) => void\n  onRowCoords?: (rowCoords: PositionCache) => void\n  onScrollLeftRequest?: (scrollLeft: number) => void\n  onRowHeightChange?: (rowEl: HTMLTableRowElement, isStable: boolean) => void\n}\n\ninterface ResourceTimelineGridState {\n  slatCoords: TimelineCoords | null\n}\n\nexport class ResourceTimelineGrid extends DateComponent<ResourceTimelineGridProps, ResourceTimelineGridState> {\n  private computeHasResourceBusinessHours = memoize(computeHasResourceBusinessHours)\n  private resourceSplitter = new ResourceSplitter() // doesn't let it do businessHours tho\n  private bgSlicer = new TimelineLaneSlicer()\n  private slatsRef = createRef<TimelineSlats>() // needed for Hit creation :(\n  private rowCoords: PositionCache // for queryHit\n\n  state: ResourceTimelineGridState = {\n    slatCoords: null,\n  }\n\n  render() {\n    let { props, state, context } = this\n    let { dateProfile, tDateProfile } = props\n    let timerUnit = greatestDurationDenominator(tDateProfile.slotDuration).unit\n    let hasResourceBusinessHours = this.computeHasResourceBusinessHours(props.rowNodes)\n\n    let splitProps = this.resourceSplitter.splitProps(props)\n    let bgLaneProps = splitProps['']\n    let bgSlicedProps = this.bgSlicer.sliceProps(\n      bgLaneProps,\n      dateProfile,\n      tDateProfile.isTimeScale ? null : props.nextDayThreshold,\n      context, // wish we didn't need to pass in the rest of these args...\n      dateProfile,\n      context.dateProfileGenerator,\n      tDateProfile,\n      context.dateEnv,\n    )\n\n    // WORKAROUND: make ignore slatCoords when out of sync with dateProfile\n    let slatCoords = state.slatCoords && state.slatCoords.dateProfile === props.dateProfile ? state.slatCoords : null\n\n    return (\n      <div\n        ref={this.handleEl}\n        className={[\n          'fc-timeline-body',\n          props.expandRows ? 'fc-timeline-body-expandrows' : '',\n        ].join(' ')}\n        style={{ minWidth: props.tableMinWidth }}\n      >\n        <NowTimer unit={timerUnit}>\n          {(nowDate: DateMarker, todayRange: DateRange) => (\n            <Fragment>\n              <TimelineSlats\n                ref={this.slatsRef}\n                dateProfile={dateProfile}\n                tDateProfile={tDateProfile}\n                nowDate={nowDate}\n                todayRange={todayRange}\n                clientWidth={props.clientWidth}\n                tableColGroupNode={props.tableColGroupNode}\n                tableMinWidth={props.tableMinWidth}\n                onCoords={this.handleSlatCoords}\n                onScrollLeftRequest={props.onScrollLeftRequest}\n              />\n              <TimelineLaneBg\n                businessHourSegs={hasResourceBusinessHours ? null : bgSlicedProps.businessHourSegs}\n                bgEventSegs={bgSlicedProps.bgEventSegs}\n                timelineCoords={slatCoords}\n                // empty array will result in unnecessary rerenders?\n                eventResizeSegs={(bgSlicedProps.eventResize ? bgSlicedProps.eventResize.segs as TimelineLaneSeg[] : [])}\n                dateSelectionSegs={bgSlicedProps.dateSelectionSegs}\n                nowDate={nowDate}\n                todayRange={todayRange}\n              />\n              <ResourceTimelineLanes\n                rowNodes={props.rowNodes}\n                dateProfile={dateProfile}\n                tDateProfile={props.tDateProfile}\n                nowDate={nowDate}\n                todayRange={todayRange}\n                splitProps={splitProps}\n                fallbackBusinessHours={hasResourceBusinessHours ? props.businessHours : null}\n                clientWidth={props.clientWidth}\n                minHeight={props.expandRows ? props.clientHeight : ''}\n                tableMinWidth={props.tableMinWidth}\n                innerHeights={props.rowInnerHeights}\n                slatCoords={slatCoords}\n                onRowCoords={this.handleRowCoords}\n                onRowHeightChange={props.onRowHeightChange}\n              />\n              {(context.options.nowIndicator && slatCoords && slatCoords.isDateInRange(nowDate)) && (\n                <div className=\"fc-timeline-now-indicator-container\">\n                  <NowIndicatorContainer\n                    elClasses={['fc-timeline-now-indicator-line']}\n                    elStyle={coordToCss(slatCoords.dateToCoord(nowDate), context.isRtl)}\n                    isAxis={false}\n                    date={nowDate}\n                  />\n                </div>\n              )}\n            </Fragment>\n          )}\n        </NowTimer>\n      </div>\n    )\n  }\n\n  handleEl = (el: HTMLElement | null) => {\n    if (el) {\n      this.context.registerInteractiveComponent(this, { el })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n  handleSlatCoords = (slatCoords: TimelineCoords | null) => {\n    this.setState({ slatCoords })\n\n    if (this.props.onSlatCoords) {\n      this.props.onSlatCoords(slatCoords)\n    }\n  }\n\n  handleRowCoords = (rowCoords: PositionCache | null) => {\n    this.rowCoords = rowCoords\n\n    if (this.props.onRowCoords) {\n      this.props.onRowCoords(rowCoords)\n    }\n  }\n\n  // Hit System\n  // ------------------------------------------------------------------------------------------\n\n  queryHit(positionLeft: number, positionTop: number): Hit {\n    let rowCoords = this.rowCoords\n    let rowIndex = rowCoords.topToIndex(positionTop)\n\n    if (rowIndex != null) {\n      let resource = (this.props.rowNodes[rowIndex] as ResourceNode).resource\n\n      if (resource) { // not a group\n        let slatHit = this.slatsRef.current.positionToHit(positionLeft)\n\n        if (slatHit) {\n          return {\n            dateProfile: this.props.dateProfile,\n            dateSpan: {\n              range: slatHit.dateSpan.range,\n              allDay: slatHit.dateSpan.allDay,\n              resourceId: resource.id,\n            },\n            rect: {\n              left: slatHit.left,\n              right: slatHit.right,\n              top: rowCoords.tops[rowIndex],\n              bottom: rowCoords.bottoms[rowIndex],\n            },\n            dayEl: slatHit.dayEl,\n            layer: 0,\n          }\n        }\n      }\n    }\n\n    return null\n  }\n}\n\nfunction computeHasResourceBusinessHours(rowNodes: (GroupNode | ResourceNode)[]) {\n  for (let node of rowNodes) {\n    let resource = (node as ResourceNode).resource\n\n    if (resource && resource.businessHours) {\n      return true\n    }\n  }\n\n  return false\n}\n","import {\n  ElementDragging, PointerDragEvent, BaseComponent, ColProps,\n  ChunkConfigRowContent, ChunkConfigContent, ScrollGridSectionConfig,\n  renderScrollShim,\n  getStickyHeaderDates,\n  getStickyFooterScrollbar,\n  config,\n} from '@fullcalendar/core/internal'\nimport { createElement, createRef } from '@fullcalendar/core/preact'\nimport { ScrollGrid } from '@fullcalendar/scrollgrid/internal'\n\nconst MIN_RESOURCE_AREA_WIDTH = 30 // definitely bigger than scrollbars\n\nexport interface ResourceTimelineViewLayoutProps {\n  spreadsheetCols: ColProps[]\n  spreadsheetHeaderRows: ChunkConfigRowContent\n  spreadsheetBodyRows: ChunkConfigRowContent\n  timeCols: ColProps[]\n  timeHeaderContent: ChunkConfigContent\n  timeBodyContent: ChunkConfigContent\n  forPrint: boolean\n  isHeightAuto: boolean\n}\n\ninterface ResourceTimelineViewLayoutState {\n  resourceAreaWidthOverride: number | null\n}\n\n// RENAME?\nexport class ResourceTimelineViewLayout extends BaseComponent<ResourceTimelineViewLayoutProps, ResourceTimelineViewLayoutState> {\n  private scrollGridRef = createRef<ScrollGrid>()\n  private timeBodyScrollerElRef = createRef<HTMLDivElement>()\n  private spreadsheetHeaderChunkElRef = createRef<HTMLTableCellElement>()\n  private spreadsheetResizerDragging: ElementDragging\n  private rootElRef = createRef<HTMLElement>()\n  private ensureScrollGridResizeId: number = 0\n\n  state = {\n    resourceAreaWidthOverride: null,\n  }\n\n  render() {\n    let { props, state, context } = this\n    let { options } = context\n    let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(options)\n    let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(options)\n\n    let sections: ScrollGridSectionConfig[] = [\n      {\n        type: 'header',\n        key: 'header',\n        syncRowHeights: true,\n        isSticky: stickyHeaderDates,\n        chunks: [\n          {\n            key: 'datagrid',\n            elRef: this.spreadsheetHeaderChunkElRef,\n            // TODO: allow the content to specify this. have general-purpose 'content' with obj with keys\n            tableClassName: 'fc-datagrid-header',\n            rowContent: props.spreadsheetHeaderRows,\n          },\n          {\n            key: 'divider',\n            outerContent: (\n              <td role=\"presentation\" className={'fc-resource-timeline-divider ' + context.theme.getClass('tableCellShaded')} />\n            ),\n          },\n          {\n            key: 'timeline',\n            content: props.timeHeaderContent,\n          },\n        ],\n      },\n      {\n        type: 'body',\n        key: 'body',\n        syncRowHeights: true,\n        liquid: true,\n        expandRows: Boolean(options.expandRows),\n        chunks: [\n          {\n            key: 'datagrid',\n            tableClassName: 'fc-datagrid-body',\n            rowContent: props.spreadsheetBodyRows,\n          },\n          {\n            key: 'divider',\n            outerContent: (\n              <td role=\"presentation\" className={'fc-resource-timeline-divider ' + context.theme.getClass('tableCellShaded')} />\n            ),\n          },\n          {\n            key: 'timeline',\n            scrollerElRef: this.timeBodyScrollerElRef,\n            content: props.timeBodyContent,\n          },\n        ],\n      },\n    ]\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [\n          {\n            key: 'datagrid',\n            content: renderScrollShim,\n          },\n          {\n            key: 'divider',\n            outerContent: (\n              <td role=\"presentation\" className={'fc-resource-timeline-divider ' + context.theme.getClass('tableCellShaded')} />\n            ),\n          },\n          {\n            key: 'timeline',\n            content: renderScrollShim,\n          },\n        ],\n      })\n    }\n\n    let resourceAreaWidth = state.resourceAreaWidthOverride != null\n      ? state.resourceAreaWidthOverride\n      : options.resourceAreaWidth\n\n    return (\n      <ScrollGrid\n        ref={this.scrollGridRef}\n        elRef={this.rootElRef}\n        liquid={!props.isHeightAuto && !props.forPrint}\n        collapsibleWidth={false}\n        colGroups={[\n          { cols: props.spreadsheetCols, width: resourceAreaWidth },\n          { cols: [] }, // for the divider\n          { cols: props.timeCols },\n        ]}\n        sections={sections}\n      />\n    )\n  }\n\n  forceTimeScroll(left: number) {\n    let scrollGrid = this.scrollGridRef.current\n    scrollGrid.forceScrollLeft(2, left) // 2 = the time area\n  }\n\n  forceResourceScroll(top: number) {\n    let scrollGrid = this.scrollGridRef.current\n    scrollGrid.forceScrollTop(1, top) // 1 = the body\n  }\n\n  getResourceScroll(): number {\n    let timeBodyScrollerEl = this.timeBodyScrollerElRef.current\n    return timeBodyScrollerEl.scrollTop\n  }\n\n  // Resource Area Resizing\n  // ------------------------------------------------------------------------------------------\n  // NOTE: a callback Ref for the resizer was firing multiple times with same elements (Preact)\n  // that's why we use spreadsheetResizerElRef instead\n\n  componentDidMount() {\n    this.initSpreadsheetResizing()\n  }\n\n  componentWillUnmount() {\n    this.destroySpreadsheetResizing()\n  }\n\n  initSpreadsheetResizing() {\n    let { isRtl, pluginHooks } = this.context\n    let ElementDraggingImpl = pluginHooks.elementDraggingImpl\n    let spreadsheetHeadEl = this.spreadsheetHeaderChunkElRef.current\n\n    if (ElementDraggingImpl) {\n      let rootEl = this.rootElRef.current\n      let dragging = this.spreadsheetResizerDragging = new ElementDraggingImpl(rootEl, '.fc-resource-timeline-divider')\n      let dragStartWidth\n      let viewWidth\n\n      dragging.emitter.on('dragstart', () => {\n        dragStartWidth = spreadsheetHeadEl.getBoundingClientRect().width\n        viewWidth = rootEl.getBoundingClientRect().width\n      })\n\n      dragging.emitter.on('dragmove', (pev: PointerDragEvent) => {\n        let newWidth = dragStartWidth + pev.deltaX * (isRtl ? -1 : 1)\n        newWidth = Math.max(newWidth, MIN_RESOURCE_AREA_WIDTH)\n        newWidth = Math.min(newWidth, viewWidth - MIN_RESOURCE_AREA_WIDTH)\n\n        // scrollgrid will ignore resize requests if there are too many :|\n        this.setState({\n          resourceAreaWidthOverride: newWidth,\n        }, this.ensureScrollGridResize)\n      })\n\n      dragging.setAutoScrollEnabled(false) // because gets weird with auto-scrolling time area\n    }\n  }\n\n  destroySpreadsheetResizing() {\n    if (this.spreadsheetResizerDragging) {\n      this.spreadsheetResizerDragging.destroy()\n    }\n  }\n\n  /*\n  ghetto debounce. don't race with ScrollGrid's resizing delay. solves #6140\n  */\n  ensureScrollGridResize = () => {\n    if (this.ensureScrollGridResizeId) {\n      clearTimeout(this.ensureScrollGridResizeId)\n    }\n    this.ensureScrollGridResizeId = setTimeout(() => {\n      this.scrollGridRef.current.handleSizing(false)\n    }, config.SCROLLGRID_RESIZE_INTERVAL + 1)\n  }\n}\n","import { CssDimValue } from '@fullcalendar/core'\nimport {\n  ViewContext, memoize,\n  ChunkContentCallbackArgs, isArraysEqual, PositionCache,\n  ScrollRequest, ScrollResponder, ViewContainer, BaseComponent, ViewOptionsRefined,\n} from '@fullcalendar/core/internal'\nimport { createElement, createRef, Fragment } from '@fullcalendar/core/preact'\nimport {\n  buildTimelineDateProfile, TimelineHeader,\n  buildSlatCols,\n  TimelineCoords,\n  TimelineDateProfile,\n} from '@fullcalendar/timeline/internal'\nimport {\n  GroupNode, ResourceNode, ResourceViewProps, buildRowNodes,\n  ColSpec, GroupSpec, DEFAULT_RESOURCE_ORDER,\n} from '@fullcalendar/resource/internal'\nimport { SpreadsheetRow } from './SpreadsheetRow.js'\nimport { SpreadsheetGroupRow } from './SpreadsheetGroupRow.js'\nimport { SpreadsheetHeader } from './SpreadsheetHeader.js'\nimport { ResourceTimelineGrid } from './ResourceTimelineGrid.js'\nimport { ResourceTimelineViewLayout } from './ResourceTimelineViewLayout.js'\n\ninterface ResourceTimelineViewState {\n  resourceAreaWidth: CssDimValue\n  spreadsheetColWidths: number[]\n  slatCoords?: TimelineCoords\n  slotCushionMaxWidth?: number\n}\n\ninterface ResourceTimelineViewSnapshot {\n  resourceScroll?: ResourceScrollState\n}\n\ninterface ResourceScrollState {\n  rowId: string\n  fromBottom: number\n}\n\nexport class ResourceTimelineView extends BaseComponent<ResourceViewProps, ResourceTimelineViewState> {\n  private processColOptions = memoize(processColOptions)\n  private buildTimelineDateProfile = memoize(buildTimelineDateProfile)\n  private hasNesting = memoize(hasNesting)\n  private buildRowNodes = memoize(buildRowNodes)\n  private layoutRef = createRef<ResourceTimelineViewLayout>()\n  private rowNodes: (GroupNode | ResourceNode)[] = []\n  private renderedRowNodes: (GroupNode | ResourceNode)[] = []\n  private buildRowIndex = memoize(buildRowIndex)\n  private rowCoords: PositionCache\n  private scrollResponder: ScrollResponder\n\n  constructor(props: ResourceViewProps, context: ViewContext) {\n    super(props, context)\n\n    this.state = {\n      resourceAreaWidth: context.options.resourceAreaWidth,\n      spreadsheetColWidths: [],\n    }\n  }\n\n  render() {\n    let { props, state, context } = this\n    let { options, viewSpec } = context\n    let { superHeaderRendering, groupSpecs, orderSpecs, isVGrouping, colSpecs } = this.processColOptions(context.options)\n\n    let tDateProfile = this.buildTimelineDateProfile(\n      props.dateProfile,\n      context.dateEnv,\n      options,\n      context.dateProfileGenerator,\n    )\n\n    let rowNodes = this.rowNodes = this.buildRowNodes(\n      props.resourceStore,\n      groupSpecs,\n      orderSpecs,\n      isVGrouping,\n      props.resourceEntityExpansions,\n      options.resourcesInitiallyExpanded,\n    )\n\n    let { slotMinWidth } = options\n    let slatCols = buildSlatCols(tDateProfile, slotMinWidth || this.computeFallbackSlotMinWidth(tDateProfile))\n\n    return (\n      <ViewContainer\n        elClasses={[\n          'fc-resource-timeline',\n          !this.hasNesting(rowNodes) && 'fc-resource-timeline-flat', // flat means there's no nesting\n          'fc-timeline',\n          options.eventOverlap === false ?\n            'fc-timeline-overlap-disabled' :\n            'fc-timeline-overlap-enabled',\n        ]}\n        viewSpec={viewSpec}\n      >\n        <ResourceTimelineViewLayout\n          ref={this.layoutRef}\n          forPrint={props.forPrint}\n          isHeightAuto={props.isHeightAuto}\n          spreadsheetCols={\n            buildSpreadsheetCols(colSpecs, state.spreadsheetColWidths, '')\n          }\n          spreadsheetHeaderRows={(contentArg: ChunkContentCallbackArgs) => (\n            <SpreadsheetHeader // TODO: rename to SpreadsheetHeaderRows\n              superHeaderRendering={superHeaderRendering}\n              colSpecs={colSpecs}\n              onColWidthChange={this.handleColWidthChange}\n              rowInnerHeights={contentArg.rowSyncHeights}\n            />\n          )}\n          spreadsheetBodyRows={(contentArg: ChunkContentCallbackArgs) => (\n            <Fragment>\n              {this.renderSpreadsheetRows(rowNodes, colSpecs, contentArg.rowSyncHeights)}\n            </Fragment>\n          )}\n          timeCols={slatCols}\n          timeHeaderContent={(contentArg: ChunkContentCallbackArgs) => (\n            <TimelineHeader\n              clientWidth={contentArg.clientWidth}\n              clientHeight={contentArg.clientHeight}\n              tableMinWidth={contentArg.tableMinWidth}\n              tableColGroupNode={contentArg.tableColGroupNode}\n              dateProfile={props.dateProfile}\n              tDateProfile={tDateProfile}\n              slatCoords={state.slatCoords}\n              rowInnerHeights={contentArg.rowSyncHeights}\n              onMaxCushionWidth={slotMinWidth ? null : this.handleMaxCushionWidth}\n            />\n          )}\n          timeBodyContent={(contentArg: ChunkContentCallbackArgs) => (\n            <ResourceTimelineGrid\n              dateProfile={props.dateProfile}\n              clientWidth={contentArg.clientWidth}\n              clientHeight={contentArg.clientHeight}\n              tableMinWidth={contentArg.tableMinWidth}\n              tableColGroupNode={contentArg.tableColGroupNode}\n              expandRows={contentArg.expandRows}\n              tDateProfile={tDateProfile}\n              rowNodes={rowNodes}\n              businessHours={props.businessHours}\n              dateSelection={props.dateSelection}\n              eventStore={props.eventStore}\n              eventUiBases={props.eventUiBases}\n              eventSelection={props.eventSelection}\n              eventDrag={props.eventDrag}\n              eventResize={props.eventResize}\n              resourceStore={props.resourceStore}\n              nextDayThreshold={context.options.nextDayThreshold}\n              rowInnerHeights={contentArg.rowSyncHeights}\n              onSlatCoords={this.handleSlatCoords}\n              onRowCoords={this.handleRowCoords}\n              onScrollLeftRequest={this.handleScrollLeftRequest}\n              onRowHeightChange={contentArg.reportRowHeightChange}\n            />\n          )}\n        />\n      </ViewContainer>\n    )\n  }\n\n  renderSpreadsheetRows(nodes: (ResourceNode | GroupNode)[], colSpecs: ColSpec[], rowSyncHeights: number[]) {\n    return nodes.map((node, index) => {\n      if ((node as GroupNode).group) {\n        return (\n          <SpreadsheetGroupRow\n            key={node.id}\n            id={node.id}\n            spreadsheetColCnt={colSpecs.length}\n            isExpanded={node.isExpanded}\n            group={(node as GroupNode).group}\n            innerHeight={rowSyncHeights[index] || ''}\n          />\n        )\n      }\n\n      if ((node as ResourceNode).resource) {\n        return (\n          <SpreadsheetRow\n            key={node.id}\n            colSpecs={colSpecs}\n            rowSpans={(node as ResourceNode).rowSpans}\n            depth={(node as ResourceNode).depth}\n            isExpanded={node.isExpanded}\n            hasChildren={(node as ResourceNode).hasChildren}\n            resource={(node as ResourceNode).resource}\n            innerHeight={rowSyncHeights[index] || ''}\n          />\n        )\n      }\n\n      return null\n    })\n  }\n\n  componentDidMount() {\n    this.renderedRowNodes = this.rowNodes\n    this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest)\n  }\n\n  getSnapshotBeforeUpdate(): ResourceTimelineViewSnapshot {\n    if (!this.props.forPrint) { // because print-view is always zero?\n      return { resourceScroll: this.queryResourceScroll() }\n    }\n    return {}\n  }\n\n  componentDidUpdate(prevProps: ResourceViewProps, prevState: ResourceTimelineViewState, snapshot: ResourceTimelineViewSnapshot) {\n    this.renderedRowNodes = this.rowNodes\n\n    this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile)\n\n    if (snapshot.resourceScroll) {\n      this.handleScrollRequest(snapshot.resourceScroll) // TODO: this gets triggered too often\n    }\n  }\n\n  componentWillUnmount() {\n    this.scrollResponder.detach()\n  }\n\n  handleSlatCoords = (slatCoords: TimelineCoords) => {\n    this.setState({ slatCoords })\n  }\n\n  handleRowCoords = (rowCoords: PositionCache) => {\n    this.rowCoords = rowCoords\n    this.scrollResponder.update(false) // TODO: could eliminate this if rowCoords lived in state\n  }\n\n  handleMaxCushionWidth = (slotCushionMaxWidth) => {\n    this.setState({\n      slotCushionMaxWidth: Math.ceil(slotCushionMaxWidth), // for less rerendering TODO: DRY\n    })\n  }\n\n  computeFallbackSlotMinWidth(tDateProfile: TimelineDateProfile) { // TODO: duplicate definition\n    return Math.max(30, ((this.state.slotCushionMaxWidth || 0) / tDateProfile.slotsPerLabel))\n  }\n\n  // Scrolling\n  // ------------------------------------------------------------------------------------------------------------------\n  // this is useful for scrolling prev/next dates while resource is scrolled down\n\n  handleScrollLeftRequest = (scrollLeft: number) => { // for ResourceTimelineGrid\n    let layout = this.layoutRef.current\n    layout.forceTimeScroll(scrollLeft)\n  }\n\n  handleScrollRequest = (request: ScrollRequest & ResourceScrollState) => { // only handles resource scroll\n    let { rowCoords } = this\n    let layout = this.layoutRef.current\n    let rowId = request.rowId || request.resourceId\n\n    if (rowCoords) {\n      if (rowId) {\n        let rowIdToIndex = this.buildRowIndex(this.renderedRowNodes)\n        let index = rowIdToIndex[rowId]\n\n        if (index != null) {\n          let scrollTop =\n            (request.fromBottom != null ?\n              rowCoords.bottoms[index] - request.fromBottom : // pixels from bottom edge\n              rowCoords.tops[index] // just use top edge\n            )\n          layout.forceResourceScroll(scrollTop)\n        }\n      }\n\n      return true\n    }\n    return null\n  }\n\n  queryResourceScroll(): ResourceScrollState {\n    let { rowCoords, renderedRowNodes } = this\n\n    if (rowCoords) {\n      let layout = this.layoutRef.current\n      let trBottoms = rowCoords.bottoms\n      let scrollTop = layout.getResourceScroll()\n      let scroll = {} as any\n\n      for (let i = 0; i < trBottoms.length; i += 1) {\n        let rowNode = renderedRowNodes[i]\n        let elBottom = trBottoms[i] - scrollTop // from the top of the scroller\n\n        if (elBottom > 0) {\n          scroll.rowId = rowNode.id\n          scroll.fromBottom = elBottom\n          break\n        }\n      }\n\n      return scroll\n    }\n    return null\n  }\n\n  // Resource INDIVIDUAL-Column Area Resizing\n  // ------------------------------------------------------------------------------------------\n\n  handleColWidthChange = (colWidths: number[]) => {\n    this.setState({\n      spreadsheetColWidths: colWidths,\n    })\n  }\n}\n\nResourceTimelineView.addStateEquality({\n  spreadsheetColWidths: isArraysEqual,\n})\n\nfunction buildRowIndex(rowNodes: (GroupNode | ResourceNode)[]) {\n  let rowIdToIndex: { [id: string]: number } = {}\n\n  for (let i = 0; i < rowNodes.length; i += 1) {\n    rowIdToIndex[rowNodes[i].id] = i\n  }\n\n  return rowIdToIndex\n}\n\nfunction buildSpreadsheetCols(colSpecs: ColSpec[], forcedWidths: number[], fallbackWidth: CssDimValue = '') {\n  return colSpecs.map((colSpec, i) => ({\n    className: colSpec.isMain ? 'fc-main-col' : '',\n    width: forcedWidths[i] || colSpec.width || fallbackWidth,\n  }))\n}\n\nfunction hasNesting(nodes: (GroupNode | ResourceNode)[]) {\n  for (let node of nodes) {\n    if ((node as GroupNode).group) {\n      return true\n    }\n\n    if ((node as ResourceNode).resource) {\n      if ((node as ResourceNode).hasChildren) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n\nfunction processColOptions(options: ViewOptionsRefined) {\n  let allColSpecs: ColSpec[] = options.resourceAreaColumns || []\n  let superHeaderRendering = null\n\n  if (!allColSpecs.length) {\n    allColSpecs.push({\n      headerClassNames: options.resourceAreaHeaderClassNames,\n      headerContent: options.resourceAreaHeaderContent || 'Resources', // TODO: view.defaults\n      headerDidMount: options.resourceAreaHeaderDidMount,\n      headerWillUnmount: options.resourceAreaHeaderWillUnmount,\n    })\n  } else if (options.resourceAreaHeaderContent) { // weird way to determine if content\n    superHeaderRendering = {\n      headerClassNames: options.resourceAreaHeaderClassNames,\n      headerContent: options.resourceAreaHeaderContent,\n      headerDidMount: options.resourceAreaHeaderDidMount,\n      headerWillUnmount: options.resourceAreaHeaderWillUnmount,\n    }\n  }\n\n  let plainColSpecs: ColSpec[] = []\n  let groupColSpecs: ColSpec[] = [] // part of the colSpecs, but filtered out in order to put first\n  let groupSpecs: GroupSpec[] = []\n  let isVGrouping = false\n\n  for (let colSpec of allColSpecs) {\n    if (colSpec.group) {\n      groupColSpecs.push({\n        ...colSpec,\n        cellClassNames: colSpec.cellClassNames || options.resourceGroupLabelClassNames,\n        cellContent: colSpec.cellContent || options.resourceGroupLabelContent,\n        cellDidMount: colSpec.cellDidMount || options.resourceGroupLabelDidMount,\n        cellWillUnmount: colSpec.cellWillUnmount || options.resourceGroupLaneWillUnmount,\n      })\n    } else {\n      plainColSpecs.push(colSpec)\n    }\n  }\n\n  // BAD: mutates a user-supplied option\n  let mainColSpec = plainColSpecs[0]\n  mainColSpec.isMain = true\n  mainColSpec.cellClassNames = mainColSpec.cellClassNames || options.resourceLabelClassNames\n  mainColSpec.cellContent = mainColSpec.cellContent || options.resourceLabelContent\n  mainColSpec.cellDidMount = mainColSpec.cellDidMount || options.resourceLabelDidMount\n  mainColSpec.cellWillUnmount = mainColSpec.cellWillUnmount || options.resourceLabelWillUnmount\n\n  if (groupColSpecs.length) {\n    groupSpecs = groupColSpecs\n    isVGrouping = true\n  } else {\n    let hGroupField = options.resourceGroupField\n    if (hGroupField) {\n      groupSpecs.push({\n        field: hGroupField,\n\n        labelClassNames: options.resourceGroupLabelClassNames,\n        labelContent: options.resourceGroupLabelContent,\n        labelDidMount: options.resourceGroupLabelDidMount,\n        labelWillUnmount: options.resourceGroupLabelWillUnmount,\n\n        laneClassNames: options.resourceGroupLaneClassNames,\n        laneContent: options.resourceGroupLaneContent,\n        laneDidMount: options.resourceGroupLaneDidMount,\n        laneWillUnmount: options.resourceGroupLaneWillUnmount,\n      })\n    }\n  }\n\n  let allOrderSpecs = options.resourceOrder || DEFAULT_RESOURCE_ORDER\n  let plainOrderSpecs = []\n\n  for (let orderSpec of allOrderSpecs) {\n    let isGroup = false\n    for (let groupSpec of groupSpecs) {\n      if (groupSpec.field === orderSpec.field) {\n        groupSpec.order = orderSpec.order // -1, 0, 1\n        isGroup = true\n        break\n      }\n    }\n    if (!isGroup) {\n      plainOrderSpecs.push(orderSpec)\n    }\n  }\n\n  return {\n    superHeaderRendering,\n    isVGrouping,\n    groupSpecs,\n    colSpecs: groupColSpecs.concat(plainColSpecs),\n    orderSpecs: plainOrderSpecs,\n  }\n}\n"],"names":["refineRenderProps"],"mappings":";;;;;;;AAEA;;;AAGE;AACI,SAAU,YAAY,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,eAAe,EAAE,EAAA;IAC9E,IAAI,KAAK,GAAY,EAAE,CAAA;AAEvB,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE;QACjC,KAAK,CAAC,IAAI,CACR,aAAA,CAAA,MAAA,EAAA,EAAM,SAAS,EAAC,SAAS,EAAG,CAAA,CAC7B,CAAA;AACF,KAAA;AAED,IAAA,IAAI,cAAc,GAAG,CAAC,SAAS,CAAC,CAAA;AAChC,IAAA,IAAI,WAAW,EAAE;AACf,QAAA,IAAI,UAAU,EAAE;AACd,YAAA,cAAc,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAA;AAC5C,SAAA;AAAM,aAAA;AACL,YAAA,cAAc,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAA;AAC3C,SAAA;AACF,KAAA;IAED,KAAK,CAAC,IAAI,CACR,aAAA,CAAA,MAAA,EAAA,EACE,SAAS,EAAE,sBAAsB,IAAI,WAAW,GAAG,EAAE,GAAG,mCAAmC,CAAC,EAC5F,OAAO,EAAE,eAAe,EAAA;QAExB,aAAM,CAAA,MAAA,EAAA,EAAA,SAAS,EAAE,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,EAAA,CAAI,CACxC,CACR,CAAA;IAED,OAAO,aAAa,CAAC,QAAQ,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,CAAA;AAC9C;;ACZA;AACM,MAAO,yBAA0B,SAAQ,aAA6C,CAAA;AAA5F,IAAA,WAAA,GAAA;;AACU,QAAA,IAAA,CAAA,iBAAiB,GAAG,aAAa,CAAC,iBAAiB,CAAC,CAAA;AAmD5D,QAAA,IAAA,CAAA,eAAe,GAAG,CAAC,EAAW,KAAI;AAChC,YAAA,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;YAEpB,IAAI,KAAK,CAAC,WAAW,EAAE;AACrB,gBAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;AACpB,oBAAA,IAAI,EAAE,8BAA8B;AACpC,oBAAA,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE;AACrB,oBAAA,UAAU,EAAE,CAAC,KAAK,CAAC,UAAU;AAC9B,iBAAA,CAAC,CAAA;AACH,aAAA;AACH,SAAC,CAAA;KACF;IA5DC,MAAM,GAAA;AACJ,QAAA,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;AAC7B,QAAA,IAAI,EAAE,OAAO,EAAE,GAAG,KAAK,CAAA;AACvB,QAAA,IAAI,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACvC,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,UAAU,EAAE,KAAK,CAAC,UAAU;YAC5B,OAAO;AACR,SAAA,CAAC,CAAA;QAEF,QACE,cAAC,gBAAgB,EAAA,EACf,KAAK,EAAC,IAAI,EACV,SAAS,EAAE;gBACT,kBAAkB;gBAClB,aAAa;AACd,aAAA,EACD,OAAO,EAAE;AACP,gBAAA,IAAI,EAAE,UAAU;AAChB,gBAAA,kBAAkB,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE;AACtC,aAAA,EACD,WAAW,EAAE,WAAW,EACxB,aAAa,EAAE,OAAO,CAAC,MAAM,GAAG,sBAAsB,GAAG,SAAS,EAClE,SAAS,EAAE,OAAO,CAAC,WAAW,IAAI,mBAAmB,EACrD,kBAAkB,EAAE,OAAO,CAAC,cAAc,EAC1C,QAAQ,EAAE,OAAO,CAAC,YAAY,EAC9B,WAAW,EAAE,OAAO,CAAC,eAAe,EAEnC,EAAA,CAAC,YAAY,MACZ,aAAK,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,wBAAwB,EAAC,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,WAAW,EAAE,EAAA;YAC1E,aAAK,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,mDAAmD,EAAA;AAC/D,gBAAA,OAAO,CAAC,MAAM,KACb,aAAC,CAAA,YAAY,EACX,EAAA,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,eAAe,EAAE,IAAI,CAAC,eAAe,GACrC,CACH;AACD,gBAAA,aAAA,CAAC,YAAY,EACX,EAAA,KAAK,EAAC,MAAM,EACZ,SAAS,EAAE,CAAC,uBAAuB,CAAC,EACpC,CAAA,CACE,CACF,CACP,CACgB,EACpB;KACF;AAaF,CAAA;AAED,SAAS,mBAAmB,CAAC,WAAwB,EAAA;AACnD,IAAA,OAAO,WAAW,CAAC,UAAU,IAAI,aAAC,CAAA,QAAQ,iBAAkB,CAAA;AAC9D,CAAC;AAgBD,SAAS,iBAAiB,CAAC,KAAuB,EAAA;IAChD,OAAO;QACL,QAAQ,EAAE,IAAI,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,QAAQ,CAAC;QACxD,UAAU,EAAE,KAAK,CAAC,UAAU;AAC5B,QAAA,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO;KAC5B,CAAA;AACH;;ACtGA;AACM,MAAO,oBAAqB,SAAQ,aAAwC,CAAA;IAChF,MAAM,GAAA;AACJ,QAAA,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;AAC7B,QAAA,IAAI,EAAE,OAAO,EAAE,GAAG,KAAK,CAAA;AACvB,QAAA,IAAI,WAAW,GAAsB;YACnC,UAAU,EAAE,KAAK,CAAC,UAAU;YAC5B,IAAI,EAAE,OAAO,CAAC,OAAO;SACtB,CAAA;;;QAID,QACE,cAAC,gBAAgB,EAAA,EACf,KAAK,EAAC,IAAI,EACV,SAAS,EAAE;gBACT,kBAAkB;gBAClB,mBAAmB;AACpB,aAAA,EACD,OAAO,EAAE;AACP,gBAAA,IAAI,EAAE,UAAU;gBAChB,OAAO,EAAE,KAAK,CAAC,OAAO;AACvB,aAAA,EACD,WAAW,EAAE,WAAW,EACxB,aAAa,EAAC,2BAA2B,EACzC,SAAS,EAAE,OAAO,CAAC,WAAW,IAAI,gBAAgB,EAClD,kBAAkB,EAAE,OAAO,CAAC,cAAc,EAC1C,QAAQ,EAAE,OAAO,CAAC,YAAY,EAC9B,WAAW,EAAE,OAAO,CAAC,eAAe,IAEnC,CAAC,YAAY,MACZ,aAAK,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,sDAAsD,EAAA;AACnE,YAAA,aAAA,CAAC,YAAY,EACX,EAAA,KAAK,EAAC,KAAK,EACX,SAAS,EAAE,CAAC,0BAA0B,EAAE,WAAW,CAAC,EAAA,CACpD,CACE,CACP,CACgB,EACpB;KACF;AACF,CAAA;AAED,SAAS,gBAAgB,CAAC,WAA8B,EAAA;AACtD,IAAA,OAAO,WAAW,CAAC,UAAU,IAAI,aAAC,CAAA,QAAQ,iBAAkB,CAAA;AAC9D;;ACtCM,MAAO,cAAe,SAAQ,aAA+C,CAAA;IACjF,MAAM,GAAA;AACJ,QAAA,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;QACpB,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,KAAK,CAAA;QACzC,IAAI,cAAc,GAAG,mBAAmB,CAAC,QAAQ,CAAC,CAAA;AAElD,QAAA,QACE,aAAI,CAAA,IAAA,EAAA,EAAA,IAAI,EAAC,KAAK,IACX,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,KAAI;AACjC,YAAA,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;AAEzB,YAAA,IAAI,OAAO,KAAK,CAAC,EAAE;AACjB,gBAAA,OAAO,IAAI,CAAA;AACZ,aAAA;YAED,IAAI,OAAO,IAAI,IAAI,EAAE;gBACnB,OAAO,GAAG,CAAC,CAAA;AACZ,aAAA;AAED,YAAA,IAAI,UAAU,GAAG,OAAO,CAAC,KAAK,GAAG,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC;iBAC3D,QAAQ,CAAC,KAAK,IAAI,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAA;YAE9C,IAAI,OAAO,GAAG,CAAC,EAAE;gBACf,QACE,cAAC,oBAAoB,EAAA,EACnB,GAAG,EAAE,CAAC,EACN,OAAO,EAAE,OAAO,EAChB,UAAU,EAAE,UAAU,EACtB,OAAO,EAAE,OAAO,EAChB,CAAA,EACH;AACF,aAAA;AAED,YAAA,QACE,aAAC,CAAA,yBAAyB,IACxB,GAAG,EAAE,CAAC,EACN,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,QAAQ,EAClB,UAAU,EAAE,UAAU,EACtB,KAAK,EAAE,KAAK,EACZ,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,WAAW,EAAE,KAAK,CAAC,WAAW,EAAA,CAC9B,EACH;SACF,CAAC,CACC,EACN;KACF;AACF,CAAA;AAED,cAAc,CAAC,gBAAgB,CAAC;AAC9B,IAAA,QAAQ,EAAE,aAAa;AACxB,CAAA,CAAC;;ACvDF;AACM,MAAO,mBAAoB,SAAQ,aAAoD,CAAA;AAA7F,IAAA,WAAA,GAAA;;QACE,IAAa,CAAA,aAAA,GAA8B,SAAS,EAAkB,CAAA;QAqDtE,IAAe,CAAA,eAAA,GAAG,MAAK;AACrB,YAAA,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;AAEpB,YAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;AACpB,gBAAA,IAAI,EAAE,8BAA8B;gBACpC,EAAE,EAAE,KAAK,CAAC,EAAE;AACZ,gBAAA,UAAU,EAAE,CAAC,KAAK,CAAC,UAAU;AAC9B,aAAA,CAAC,CAAA;AACJ,SAAC,CAAA;KACF;IA5DC,MAAM,GAAA;AACJ,QAAA,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;AAC7B,QAAA,IAAI,WAAW,GAAsB,EAAE,UAAU,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,CAAA;AAC7F,QAAA,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAA;AAE3B,QAAA,QACE,aAAA,CAAA,IAAA,EAAA,EAAI,IAAI,EAAC,KAAK,EAAA;AACZ,YAAA,aAAA,CAAC,gBAAgB,EACf,EAAA,KAAK,EAAC,IAAI,EACV,SAAS,EAAE;oBACT,kBAAkB;oBAClB,mBAAmB;AACnB,oBAAA,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC;AAC1C,iBAAA,EACD,OAAO,EAAE;;;;;AAKP,oBAAA,IAAI,EAAE,cAAc;AACpB,oBAAA,KAAK,EAAE,UAAU;oBACjB,OAAO,EAAE,KAAK,CAAC,iBAAiB;iBACjC,EACD,WAAW,EAAE,WAAW,EACxB,aAAa,EAAC,2BAA2B,EACzC,SAAS,EAAE,IAAI,CAAC,YAAY,IAAI,eAAe,EAC/C,kBAAkB,EAAE,IAAI,CAAC,eAAe,EACxC,QAAQ,EAAE,IAAI,CAAC,aAAa,EAC5B,WAAW,EAAE,IAAI,CAAC,gBAAgB,IAEjC,CAAC,YAAY,MACZ,uBAAK,SAAS,EAAC,wBAAwB,EAAC,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,WAAW,EAAE,EAAA;gBAC1E,aAAK,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,mDAAmD,EAAC,GAAG,EAAE,IAAI,CAAC,aAAa,EAAA;AACxF,oBAAA,aAAA,CAAC,YAAY,EACX,EAAA,KAAK,EAAE,CAAC,EACR,WAAW,EACX,IAAA,EAAA,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,CAAA;AACF,oBAAA,aAAA,CAAC,YAAY,EACX,EAAA,KAAK,EAAC,MAAM,EACZ,SAAS,EAAE,CAAC,uBAAuB,CAAC,GACpC,CACE,CACF,CACP,CACgB,CAChB,EACN;KACF;AAWF,CAAA;AAED,mBAAmB,CAAC,gBAAgB,CAAC;AACnC,IAAA,KAAK,EAAE,aAAa;AACrB,CAAA,CAAC,CAAA;AAEF,SAAS,eAAe,CAAC,WAA8B,EAAA;AACrD,IAAA,OAAO,WAAW,CAAC,UAAU,IAAI,aAAC,CAAA,QAAQ,iBAAkB,CAAA;AAC9D;;ACvEA,MAAM,yBAAyB,GAAG,EAAE,CAAA;AAE9B,MAAO,iBAAkB,SAAQ,aAAqC,CAAA;AAA5E,IAAA,WAAA,GAAA;;AACU,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,MAAM,CAAc,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;QAC5E,IAAY,CAAA,YAAA,GAAyC,EAAE,CAAA;KAiJhE;IA/IC,MAAM,GAAA;QACJ,IAAI,EAAE,QAAQ,EAAE,oBAAoB,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,KAAK,CAAA;QACpE,IAAI,WAAW,GAAwB,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAA;QACrE,IAAI,QAAQ,GAAY,EAAE,CAAA;AAE1B,QAAA,eAAe,GAAG,eAAe,CAAC,KAAK,EAAE,CAAA;AAEzC,QAAA,IAAI,oBAAoB,EAAE;AACxB,YAAA,IAAI,cAAc,GAAG,eAAe,CAAC,KAAK,EAAE,CAAA;YAE5C,QAAQ,CAAC,IAAI,CACX,aAAI,CAAA,IAAA,EAAA,EAAA,GAAG,EAAC,WAAW,EAAC,IAAI,EAAC,KAAK,EAAA;AAC5B,gBAAA,aAAA,CAAC,gBAAgB,EACf,EAAA,KAAK,EAAC,IAAI,EACV,SAAS,EAAE;wBACT,kBAAkB;wBAClB,wBAAwB;AACzB,qBAAA,EACD,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE,cAAc;AACpB,wBAAA,KAAK,EAAE,UAAU;wBACjB,OAAO,EAAE,QAAQ,CAAC,MAAM;qBACzB,EACD,WAAW,EAAE,WAAW,EACxB,aAAa,EAAC,2BAA2B,EACzC,SAAS,EAAE,oBAAoB,CAAC,aAAa,EAC7C,kBAAkB,EAAE,oBAAoB,CAAC,gBAAgB,EACzD,QAAQ,EAAE,oBAAoB,CAAC,cAAc,EAC7C,WAAW,EAAE,oBAAoB,CAAC,iBAAiB,EAElD,EAAA,CAAC,YAAY,MACZ,aAAK,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,wBAAwB,EAAC,KAAK,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,EAAA;AACvE,oBAAA,aAAA,CAAC,YAAY,EACX,EAAA,KAAK,EAAC,KAAK,EACX,SAAS,EAAE,CAAC,0BAA0B,EAAE,0BAA0B,CAAC,EACnE,CAAA,CACE,CACP,CACgB,CAChB,CACN,CAAA;AACF,SAAA;AAED,QAAA,IAAI,cAAc,GAAG,eAAe,CAAC,KAAK,EAAE,CAAA;QAC5C,QAAQ,CAAC,IAAI,CACX,aAAA,CAAA,IAAA,EAAA,EAAI,GAAG,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EACrB,EAAA,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,KAAI;YAC3B,IAAI,SAAS,GAAG,CAAC,MAAM,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;;AAG3C,YAAA,QACE,aAAA,CAAC,gBAAgB,EAAA,EACf,GAAG,EAAE,CAAC,EACN,KAAK,EAAC,IAAI,EACV,SAAS,EAAE,CAAC,kBAAkB,CAAC,EAC/B,OAAO,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,EACjC,WAAW,EAAE,WAAW,EACxB,aAAa,EAAC,2BAA2B,EACzC,SAAS,EAAE,OAAO,CAAC,aAAa,EAChC,kBAAkB,EAAE,OAAO,CAAC,gBAAgB,EAC5C,QAAQ,EAAE,OAAO,CAAC,cAAc,EAChC,WAAW,EAAE,OAAO,CAAC,iBAAiB,EAErC,EAAA,CAAC,YAAY,MACZ,uBAAK,SAAS,EAAC,wBAAwB,EAAC,KAAK,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,EAAA;gBACvE,aAAK,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,mDAAmD,EAAA;AAC/D,oBAAA,OAAO,CAAC,MAAM,KACb,aAAM,CAAA,MAAA,EAAA,EAAA,SAAS,EAAC,uDAAuD,EAAA;AACrE,wBAAA,aAAA,CAAA,MAAA,EAAA,EAAM,SAAS,EAAC,SAAS,EAAA,CAAG,CACvB,CACR;AACD,oBAAA,aAAA,CAAC,YAAY,EAAA,EACX,KAAK,EAAC,MAAM,EACZ,SAAS,EAAE,CAAC,uBAAuB,CAAC,EAAA,CACpC,CACE;gBACL,CAAC,SAAS,KACT,aAAK,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,0BAA0B,EAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAA,CAAI,CACnF,CACG,CACP,CACgB,EACpB;SACF,CAAC,CACC,CACN,CAAA;AAED,QAAA,QAAQ,aAAC,CAAA,QAAQ,QAAE,QAAQ,CAAY,EAAC;KACzC;IAED,mBAAmB,CAAC,SAA6B,EAAE,KAAa,EAAA;AAC9D,QAAA,IAAI,EAAE,YAAY,EAAE,GAAG,IAAI,CAAA;QAE3B,IAAI,CAAC,SAAS,EAAE;AACd,YAAA,IAAI,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAC,CAAA;AAElC,YAAA,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,OAAO,EAAE,CAAA;AAClB,gBAAA,OAAO,YAAY,CAAC,KAAK,CAAC,CAAA;AAC3B,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAA;AAEnE,YAAA,IAAI,QAAQ,EAAE;AACZ,gBAAA,YAAY,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAA;AAC/B,aAAA;AACF,SAAA;KACF;IAED,eAAe,CAAC,SAAsB,EAAE,KAAa,EAAA;QACnD,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,OAAO,CAAA;AACzC,QAAA,IAAI,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAA;AACrC,QAAA,IAAI,mBAAmB,GAAG,WAAW,CAAC,mBAAmB,CAAA;AAEzD,QAAA,IAAI,mBAAmB,EAAE;AACvB,YAAA,IAAI,QAAQ,GAAG,IAAI,mBAAmB,CAAC,SAAS,CAAC,CAAA;YACjD,IAAI,UAAkB,CAAA;YACtB,IAAI,aAAuB,CAAA;YAE3B,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,EAAE,MAAK;AACpC,gBAAA,IAAI,QAAQ,GAAG,YAAY,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAA;AAElE,gBAAA,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,MAClC,MAAM,CAAC,qBAAqB,EAAE,CAAC,KAAK,CACrC,CAAC,CAAA;AACF,gBAAA,UAAU,GAAG,aAAa,CAAC,KAAK,CAAC,CAAA;AACnC,aAAC,CAAC,CAAA;YAEF,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,GAAqB,KAAI;AACxD,gBAAA,aAAa,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,yBAAyB,CAAC,CAAA;AAEtG,gBAAA,IAAI,gBAAgB,EAAE;oBACpB,gBAAgB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAA;AACxC,iBAAA;AACH,aAAC,CAAC,CAAA;AAEF,YAAA,QAAQ,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAA;AAEpC,YAAA,OAAO,QAAQ,CAAA;AAChB,SAAA;AAED,QAAA,OAAO,IAAI,CAAA;KACZ;AACF;;ACrJK,MAAO,oBAAqB,SAAQ,aAAwC,CAAA;AAAlF,IAAA,WAAA,GAAA;;AACU,QAAA,IAAA,CAAA,iBAAiB,GAAG,aAAa,CAACA,mBAAiB,CAAC,CAAA;AAuD5D,QAAA,IAAA,CAAA,kBAAkB,GAAG,CAAC,OAAoB,EAAE,QAAiB,KAAI;AAC/D,YAAA,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;gBAC7B,IAAI,CAAC,KAAK,CAAC,cAAc;;gBAEvB,cAAc,CAAC,OAAO,EAAE,IAAI,CAAwB,EACpD,QAAQ,CACT,CAAA;AACF,aAAA;AACH,SAAC,CAAA;KACF;IA9DC,MAAM,GAAA;AACJ,QAAA,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;AAC7B,QAAA,IAAI,EAAE,OAAO,EAAE,GAAG,OAAO,CAAA;AACzB,QAAA,IAAI,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAA;AAE/E,QAAA,QACE,aAAI,CAAA,IAAA,EAAA,EAAA,GAAG,EAAE,KAAK,CAAC,KAAK,EAAA;AAClB,YAAA,aAAA,CAAC,gBAAgB,EACf,EAAA,KAAK,EAAC,IAAI,EACV,SAAS,EAAE;oBACT,kBAAkB;oBAClB,aAAa;AACd,iBAAA,EACD,OAAO,EAAE;AACP,oBAAA,kBAAkB,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE;iBACtC,EACD,WAAW,EAAE,WAAW,EACxB,aAAa,EAAC,qBAAqB,EACnC,SAAS,EAAE,OAAO,CAAC,mBAAmB,EACtC,kBAAkB,EAAE,OAAO,CAAC,sBAAsB,EAClD,QAAQ,EAAE,OAAO,CAAC,oBAAoB,EACtC,WAAW,EAAE,OAAO,CAAC,uBAAuB,EAAA,EAE3C,CAAC,YAAY,MACZ,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,wBAAwB,EAAC,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,WAAW,EAAE,EAAA;gBAC1E,aAAC,CAAA,YAAY,EACX,EAAA,KAAK,EAAC,KAAK,EACX,SAAS,EAAE,CAAC,uBAAuB,CAAC,EACpC,CAAA;gBACF,aAAC,CAAA,YAAY,IACX,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,gBAAgB,EAAE,KAAK,CAAC,gBAAgB,EACxC,aAAa,EAAE,KAAK,CAAC,aAAa,EAClC,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,aAAa,EAAE,KAAK,CAAC,aAAa,EAClC,cAAc,EAAE,KAAK,CAAC,cAAc,EACpC,SAAS,EAAE,KAAK,CAAC,SAAS,EAC1B,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,cAAc,EAAE,KAAK,CAAC,cAAc,EACpC,cAAc,EAAE,IAAI,CAAC,kBAAkB,EACvC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAA,CAC7B,CACE,CACP,CACgB,CAChB,EACN;KACF;AAWF;;ACrED;;AAEE;AACI,MAAO,UAAW,SAAQ,aAA8B,CAAA;IAC5D,MAAM,GAAA;AACJ,QAAA,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;AAC7B,QAAA,IAAI,EAAE,WAAW,EAAE,GAAG,KAAK,CAAA;AAC3B,QAAA,IAAI,WAAW,GAAsB;YACnC,UAAU,EAAE,KAAK,CAAC,UAAU;YAC5B,IAAI,EAAE,OAAO,CAAC,OAAO;SACtB,CAAA;AAED,QAAA,QACE,aAAI,CAAA,IAAA,EAAA,EAAA,GAAG,EAAE,KAAK,CAAC,KAAK,EAAA;AAClB,YAAA,aAAA,CAAC,gBAAgB,EAAA,EACf,KAAK,EAAC,IAAI,EACV,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,SAAS,EAAE;oBACT,kBAAkB;oBAClB,mBAAmB;AACnB,oBAAA,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC;iBAC1C,EACD,WAAW,EAAE,WAAW,EACxB,aAAa,EAAC,0BAA0B,EACxC,SAAS,EAAE,WAAW,CAAC,WAAW,EAClC,kBAAkB,EAAE,WAAW,CAAC,cAAc,EAC9C,QAAQ,EAAE,WAAW,CAAC,YAAY,EAClC,WAAW,EAAE,WAAW,CAAC,eAAe,EAEvC,EAAA,CAAC,cAAc,MACd,aAAA,CAAC,cAAc,EAAA,EACb,KAAK,EAAC,KAAK,EACX,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,WAAW,EAAE,EAAA,CACtC,CACH,CACgB,CAChB,EACN;KACF;AACF;;ACxBK,MAAO,yBAA0B,SAAQ,aAA6C,CAAA;IAC1F,MAAM,GAAA;AACJ,QAAA,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;AAC7B,QAAA,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG,KAAK,CAAA;AAEvC,QAAA,QACE,aAAA,CAAA,OAAA,EAAA,IAAA,EACG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,KAAI;YAClC,IAAK,IAAkB,CAAC,KAAK,EAAE;gBAC7B,QACE,cAAC,UAAU,EAAA,EACT,GAAG,EAAE,IAAI,CAAC,EAAE,EACZ,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EACnC,UAAU,EAAG,IAAkB,CAAC,KAAK,CAAC,KAAK,EAC3C,WAAW,EAAG,IAAkB,CAAC,KAAK,CAAC,IAAI,EAC3C,WAAW,EAAE,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,EACtC,CAAA,EACH;AACF,aAAA;YAED,IAAK,IAAqB,CAAC,QAAQ,EAAE;AACnC,gBAAA,IAAI,QAAQ,GAAI,IAAqB,CAAC,QAAQ,CAAA;gBAE9C,QACE,cAAC,oBAAoB,EAAA,MAAA,CAAA,MAAA,CAAA,EACnB,GAAG,EAAE,IAAI,CAAC,EAAE,EACZ,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAA,EAC/B,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,IACjC,QAAQ,EAAE,QAAQ,EAClB,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,gBAAgB,EAAE,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAClD,aAAa,EAAE,QAAQ,CAAC,aAAa,IAAI,KAAK,CAAC,qBAAqB,EACpE,WAAW,EAAE,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,EACtC,cAAc,EAAE,KAAK,CAAC,UAAU,EAChC,cAAc,EAAE,KAAK,CAAC,iBAAiB,EACvC,CAAA,CAAA,EACH;AACF,aAAA;AAED,YAAA,OAAO,IAAI,CAAA;SACZ,CAAC,CACI,EACT;KACF;AACF;;AC7DK,MAAO,qBAAsB,SAAQ,aAAyC,CAAA;AAApF,IAAA,WAAA,GAAA;;QACU,IAAS,CAAA,SAAA,GAAG,SAAS,EAAoB,CAAA;AACzC,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,MAAM,EAAe,CAAA;KA6D9C;IA3DC,MAAM,GAAA;AACJ,QAAA,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;QAE7B,QACE,yBACE,GAAG,EAAE,IAAI,CAAC,SAAS,EAEnB,aAAA,EAAA,IAAA,EAAA,SAAS,EAAE,2BAA2B,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EACxE,KAAK,EAAE;gBACL,QAAQ,EAAE,KAAK,CAAC,aAAa;gBAC7B,KAAK,EAAE,KAAK,CAAC,WAAW;gBACxB,MAAM,EAAE,KAAK,CAAC,SAAS;AACxB,aAAA,EAAA;AAED,YAAA,aAAA,CAAC,yBAAyB,EAAA,EACxB,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,qBAAqB,EAAE,KAAK,CAAC,qBAAqB,EAClD,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,iBAAiB,EAAE,KAAK,CAAC,iBAAiB,EAC1C,CAAA,CACI,EACT;KACF;IAED,iBAAiB,GAAA;QACf,IAAI,CAAC,YAAY,EAAE,CAAA;KACpB;IAED,kBAAkB,GAAA;QAChB,IAAI,CAAC,YAAY,EAAE,CAAA;KACpB;IAED,oBAAoB,GAAA;AAClB,QAAA,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;AAC1B,YAAA,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;AAC7B,SAAA;KACF;IAED,YAAY,GAAA;AACV,QAAA,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;QAEpB,IAAI,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,KAAK,IAAI,EAAE;AACnD,YAAA,IAAI,CAAC,KAAK,CAAC,WAAW,CACpB,IAAI,aAAa,CACf,IAAI,CAAC,SAAS,CAAC,OAAO,EACtB,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,EACxD,KAAK,EACL,IAAI,CACL,CACF,CAAA;AACF,SAAA;KACF;AACF,CAAA;AAED,SAAS,aAAa,CAAC,KAAqC,EAAE,QAAsC,EAAA;AAClG,IAAA,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAA;AACrD;;ACpCM,MAAO,oBAAqB,SAAQ,aAAmE,CAAA;AAA7G,IAAA,WAAA,GAAA;;AACU,QAAA,IAAA,CAAA,+BAA+B,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAA;AAC1E,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,CAAA;AACzC,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,kBAAkB,EAAE,CAAA;AACnC,QAAA,IAAA,CAAA,QAAQ,GAAG,SAAS,EAAiB,CAAA;AAG7C,QAAA,IAAA,CAAA,KAAK,GAA8B;AACjC,YAAA,UAAU,EAAE,IAAI;SACjB,CAAA;AA2FD,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,EAAsB,KAAI;AACpC,YAAA,IAAI,EAAE,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;AACxD,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,OAAO,CAAC,8BAA8B,CAAC,IAAI,CAAC,CAAA;AAClD,aAAA;AACH,SAAC,CAAA;AAED,QAAA,IAAA,CAAA,gBAAgB,GAAG,CAAC,UAAiC,KAAI;AACvD,YAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,CAAC,CAAA;AAE7B,YAAA,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;AAC3B,gBAAA,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,CAAA;AACpC,aAAA;AACH,SAAC,CAAA;AAED,QAAA,IAAA,CAAA,eAAe,GAAG,CAAC,SAA+B,KAAI;AACpD,YAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;AAE1B,YAAA,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;AAC1B,gBAAA,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAA;AAClC,aAAA;AACH,SAAC,CAAA;KAsCF;IArJC,MAAM,GAAA;QACJ,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;AACpC,QAAA,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG,KAAK,CAAA;QACzC,IAAI,SAAS,GAAG,2BAA2B,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,IAAI,CAAA;QAC3E,IAAI,wBAAwB,GAAG,IAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;QAEnF,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;AACxD,QAAA,IAAI,WAAW,GAAG,UAAU,CAAC,EAAE,CAAC,CAAA;AAChC,QAAA,IAAI,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAC1C,WAAW,EACX,WAAW,EACX,YAAY,CAAC,WAAW,GAAG,IAAI,GAAG,KAAK,CAAC,gBAAgB,EACxD,OAAO;QACP,WAAW,EACX,OAAO,CAAC,oBAAoB,EAC5B,YAAY,EACZ,OAAO,CAAC,OAAO,CAChB,CAAA;;QAGD,IAAI,UAAU,GAAG,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,CAAC,WAAW,KAAK,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,UAAU,GAAG,IAAI,CAAA;QAEjH,QACE,uBACE,GAAG,EAAE,IAAI,CAAC,QAAQ,EAClB,SAAS,EAAE;gBACT,kBAAkB;gBAClB,KAAK,CAAC,UAAU,GAAG,6BAA6B,GAAG,EAAE;AACtD,aAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EACX,KAAK,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,aAAa,EAAE,EAAA;AAExC,YAAA,aAAA,CAAC,QAAQ,EAAA,EAAC,IAAI,EAAE,SAAS,EACtB,EAAA,CAAC,OAAmB,EAAE,UAAqB,MAC1C,cAAC,QAAQ,EAAA,IAAA;gBACP,aAAC,CAAA,aAAa,EACZ,EAAA,GAAG,EAAE,IAAI,CAAC,QAAQ,EAClB,WAAW,EAAE,WAAW,EACxB,YAAY,EAAE,YAAY,EAC1B,OAAO,EAAE,OAAO,EAChB,UAAU,EAAE,UAAU,EACtB,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,iBAAiB,EAAE,KAAK,CAAC,iBAAiB,EAC1C,aAAa,EAAE,KAAK,CAAC,aAAa,EAClC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAC/B,mBAAmB,EAAE,KAAK,CAAC,mBAAmB,EAC9C,CAAA;gBACF,aAAC,CAAA,cAAc,EACb,EAAA,gBAAgB,EAAE,wBAAwB,GAAG,IAAI,GAAG,aAAa,CAAC,gBAAgB,EAClF,WAAW,EAAE,aAAa,CAAC,WAAW,EACtC,cAAc,EAAE,UAAU;;AAE1B,oBAAA,eAAe,GAAG,aAAa,CAAC,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,IAAyB,GAAG,EAAE,CAAC,EACvG,iBAAiB,EAAE,aAAa,CAAC,iBAAiB,EAClD,OAAO,EAAE,OAAO,EAChB,UAAU,EAAE,UAAU,EACtB,CAAA;gBACF,aAAC,CAAA,qBAAqB,IACpB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,WAAW,EAAE,WAAW,EACxB,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,OAAO,EAAE,OAAO,EAChB,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,EACtB,qBAAqB,EAAE,wBAAwB,GAAG,KAAK,CAAC,aAAa,GAAG,IAAI,EAC5E,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,SAAS,EAAE,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,YAAY,GAAG,EAAE,EACrD,aAAa,EAAE,KAAK,CAAC,aAAa,EAClC,YAAY,EAAE,KAAK,CAAC,eAAe,EACnC,UAAU,EAAE,UAAU,EACtB,WAAW,EAAE,IAAI,CAAC,eAAe,EACjC,iBAAiB,EAAE,KAAK,CAAC,iBAAiB,EAC1C,CAAA;gBACD,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,IAAI,UAAU,IAAI,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,MAC/E,aAAK,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,qCAAqC,EAAA;AAClD,oBAAA,aAAA,CAAC,qBAAqB,EACpB,EAAA,SAAS,EAAE,CAAC,gCAAgC,CAAC,EAC7C,OAAO,EAAE,UAAU,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,EACnE,MAAM,EAAE,KAAK,EACb,IAAI,EAAE,OAAO,EAAA,CACb,CACE,CACP,CACQ,CACZ,CACQ,CACP,EACP;KACF;;;IA6BD,QAAQ,CAAC,YAAoB,EAAE,WAAmB,EAAA;AAChD,QAAA,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;QAC9B,IAAI,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,CAAA;QAEhD,IAAI,QAAQ,IAAI,IAAI,EAAE;AACpB,YAAA,IAAI,QAAQ,GAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAkB,CAAC,QAAQ,CAAA;YAEvE,IAAI,QAAQ,EAAE;AACZ,gBAAA,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC,CAAA;AAE/D,gBAAA,IAAI,OAAO,EAAE;oBACX,OAAO;AACL,wBAAA,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;AACnC,wBAAA,QAAQ,EAAE;AACR,4BAAA,KAAK,EAAE,OAAO,CAAC,QAAQ,CAAC,KAAK;AAC7B,4BAAA,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,MAAM;4BAC/B,UAAU,EAAE,QAAQ,CAAC,EAAE;AACxB,yBAAA;AACD,wBAAA,IAAI,EAAE;4BACJ,IAAI,EAAE,OAAO,CAAC,IAAI;4BAClB,KAAK,EAAE,OAAO,CAAC,KAAK;AACpB,4BAAA,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC7B,4BAAA,MAAM,EAAE,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;AACpC,yBAAA;wBACD,KAAK,EAAE,OAAO,CAAC,KAAK;AACpB,wBAAA,KAAK,EAAE,CAAC;qBACT,CAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AAED,QAAA,OAAO,IAAI,CAAA;KACZ;AACF,CAAA;AAED,SAAS,+BAA+B,CAAC,QAAsC,EAAA;AAC7E,IAAA,KAAK,IAAI,IAAI,IAAI,QAAQ,EAAE;AACzB,QAAA,IAAI,QAAQ,GAAI,IAAqB,CAAC,QAAQ,CAAA;AAE9C,QAAA,IAAI,QAAQ,IAAI,QAAQ,CAAC,aAAa,EAAE;AACtC,YAAA,OAAO,IAAI,CAAA;AACZ,SAAA;AACF,KAAA;AAED,IAAA,OAAO,KAAK,CAAA;AACd;;AC7MA,MAAM,uBAAuB,GAAG,EAAE,CAAA;AAiBlC;AACM,MAAO,0BAA2B,SAAQ,aAA+E,CAAA;AAA/H,IAAA,WAAA,GAAA;;QACU,IAAa,CAAA,aAAA,GAAG,SAAS,EAAc,CAAA;QACvC,IAAqB,CAAA,qBAAA,GAAG,SAAS,EAAkB,CAAA;QACnD,IAA2B,CAAA,2BAAA,GAAG,SAAS,EAAwB,CAAA;QAE/D,IAAS,CAAA,SAAA,GAAG,SAAS,EAAe,CAAA;QACpC,IAAwB,CAAA,wBAAA,GAAW,CAAC,CAAA;AAE5C,QAAA,IAAA,CAAA,KAAK,GAAG;AACN,YAAA,yBAAyB,EAAE,IAAI;SAChC,CAAA;AA0KD;;AAEE;QACF,IAAsB,CAAA,sBAAA,GAAG,MAAK;YAC5B,IAAI,IAAI,CAAC,wBAAwB,EAAE;AACjC,gBAAA,YAAY,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAA;AAC5C,aAAA;AACD,YAAA,IAAI,CAAC,wBAAwB,GAAG,UAAU,CAAC,MAAK;gBAC9C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAA;AAChD,aAAC,EAAE,MAAM,CAAC,0BAA0B,GAAG,CAAC,CAAC,CAAA;AAC3C,SAAC,CAAA;KACF;IAnLC,MAAM,GAAA;QACJ,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;AACpC,QAAA,IAAI,EAAE,OAAO,EAAE,GAAG,OAAO,CAAA;QACzB,IAAI,iBAAiB,GAAG,CAAC,KAAK,CAAC,QAAQ,IAAI,oBAAoB,CAAC,OAAO,CAAC,CAAA;QACxE,IAAI,qBAAqB,GAAG,CAAC,KAAK,CAAC,QAAQ,IAAI,wBAAwB,CAAC,OAAO,CAAC,CAAA;AAEhF,QAAA,IAAI,QAAQ,GAA8B;AACxC,YAAA;AACE,gBAAA,IAAI,EAAE,QAAQ;AACd,gBAAA,GAAG,EAAE,QAAQ;AACb,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,iBAAiB;AAC3B,gBAAA,MAAM,EAAE;AACN,oBAAA;AACE,wBAAA,GAAG,EAAE,UAAU;wBACf,KAAK,EAAE,IAAI,CAAC,2BAA2B;;AAEvC,wBAAA,cAAc,EAAE,oBAAoB;wBACpC,UAAU,EAAE,KAAK,CAAC,qBAAqB;AACxC,qBAAA;AACD,oBAAA;AACE,wBAAA,GAAG,EAAE,SAAS;wBACd,YAAY,GACV,aAAI,CAAA,IAAA,EAAA,EAAA,IAAI,EAAC,cAAc,EAAC,SAAS,EAAE,+BAA+B,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC,GAAI,CACnH;AACF,qBAAA;AACD,oBAAA;AACE,wBAAA,GAAG,EAAE,UAAU;wBACf,OAAO,EAAE,KAAK,CAAC,iBAAiB;AACjC,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA;AACE,gBAAA,IAAI,EAAE,MAAM;AACZ,gBAAA,GAAG,EAAE,MAAM;AACX,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,MAAM,EAAE,IAAI;AACZ,gBAAA,UAAU,EAAE,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC;AACvC,gBAAA,MAAM,EAAE;AACN,oBAAA;AACE,wBAAA,GAAG,EAAE,UAAU;AACf,wBAAA,cAAc,EAAE,kBAAkB;wBAClC,UAAU,EAAE,KAAK,CAAC,mBAAmB;AACtC,qBAAA;AACD,oBAAA;AACE,wBAAA,GAAG,EAAE,SAAS;wBACd,YAAY,GACV,aAAI,CAAA,IAAA,EAAA,EAAA,IAAI,EAAC,cAAc,EAAC,SAAS,EAAE,+BAA+B,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC,GAAI,CACnH;AACF,qBAAA;AACD,oBAAA;AACE,wBAAA,GAAG,EAAE,UAAU;wBACf,aAAa,EAAE,IAAI,CAAC,qBAAqB;wBACzC,OAAO,EAAE,KAAK,CAAC,eAAe;AAC/B,qBAAA;AACF,iBAAA;AACF,aAAA;SACF,CAAA;AAED,QAAA,IAAI,qBAAqB,EAAE;YACzB,QAAQ,CAAC,IAAI,CAAC;AACZ,gBAAA,IAAI,EAAE,QAAQ;AACd,gBAAA,GAAG,EAAE,QAAQ;AACb,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,MAAM,EAAE;AACN,oBAAA;AACE,wBAAA,GAAG,EAAE,UAAU;AACf,wBAAA,OAAO,EAAE,gBAAgB;AAC1B,qBAAA;AACD,oBAAA;AACE,wBAAA,GAAG,EAAE,SAAS;wBACd,YAAY,GACV,aAAI,CAAA,IAAA,EAAA,EAAA,IAAI,EAAC,cAAc,EAAC,SAAS,EAAE,+BAA+B,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC,GAAI,CACnH;AACF,qBAAA;AACD,oBAAA;AACE,wBAAA,GAAG,EAAE,UAAU;AACf,wBAAA,OAAO,EAAE,gBAAgB;AAC1B,qBAAA;AACF,iBAAA;AACF,aAAA,CAAC,CAAA;AACH,SAAA;AAED,QAAA,IAAI,iBAAiB,GAAG,KAAK,CAAC,yBAAyB,IAAI,IAAI;cAC3D,KAAK,CAAC,yBAAyB;AACjC,cAAE,OAAO,CAAC,iBAAiB,CAAA;AAE7B,QAAA,QACE,aAAA,CAAC,UAAU,EAAA,EACT,GAAG,EAAE,IAAI,CAAC,aAAa,EACvB,KAAK,EAAE,IAAI,CAAC,SAAS,EACrB,MAAM,EAAE,CAAC,KAAK,CAAC,YAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC9C,gBAAgB,EAAE,KAAK,EACvB,SAAS,EAAE;gBACT,EAAE,IAAI,EAAE,KAAK,CAAC,eAAe,EAAE,KAAK,EAAE,iBAAiB,EAAE;gBACzD,EAAE,IAAI,EAAE,EAAE,EAAE;AACZ,gBAAA,EAAE,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE;AACzB,aAAA,EACD,QAAQ,EAAE,QAAQ,EAAA,CAClB,EACH;KACF;AAED,IAAA,eAAe,CAAC,IAAY,EAAA;AAC1B,QAAA,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAA;QAC3C,UAAU,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;KACpC;AAED,IAAA,mBAAmB,CAAC,GAAW,EAAA;AAC7B,QAAA,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAA;QAC3C,UAAU,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;KAClC;IAED,iBAAiB,GAAA;AACf,QAAA,IAAI,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAA;QAC3D,OAAO,kBAAkB,CAAC,SAAS,CAAA;KACpC;;;;;IAOD,iBAAiB,GAAA;QACf,IAAI,CAAC,uBAAuB,EAAE,CAAA;KAC/B;IAED,oBAAoB,GAAA;QAClB,IAAI,CAAC,0BAA0B,EAAE,CAAA;KAClC;IAED,uBAAuB,GAAA;QACrB,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,OAAO,CAAA;AACzC,QAAA,IAAI,mBAAmB,GAAG,WAAW,CAAC,mBAAmB,CAAA;AACzD,QAAA,IAAI,iBAAiB,GAAG,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAA;AAEhE,QAAA,IAAI,mBAAmB,EAAE;AACvB,YAAA,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAA;AACnC,YAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,0BAA0B,GAAG,IAAI,mBAAmB,CAAC,MAAM,EAAE,+BAA+B,CAAC,CAAA;AACjH,YAAA,IAAI,cAAc,CAAA;AAClB,YAAA,IAAI,SAAS,CAAA;YAEb,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,EAAE,MAAK;AACpC,gBAAA,cAAc,GAAG,iBAAiB,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAA;AAChE,gBAAA,SAAS,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAA;AAClD,aAAC,CAAC,CAAA;YAEF,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,GAAqB,KAAI;gBACxD,IAAI,QAAQ,GAAG,cAAc,GAAG,GAAG,CAAC,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;gBAC7D,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,uBAAuB,CAAC,CAAA;gBACtD,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,SAAS,GAAG,uBAAuB,CAAC,CAAA;;gBAGlE,IAAI,CAAC,QAAQ,CAAC;AACZ,oBAAA,yBAAyB,EAAE,QAAQ;AACpC,iBAAA,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAA;AACjC,aAAC,CAAC,CAAA;AAEF,YAAA,QAAQ,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAA;AACrC,SAAA;KACF;IAED,0BAA0B,GAAA;QACxB,IAAI,IAAI,CAAC,0BAA0B,EAAE;AACnC,YAAA,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,CAAA;AAC1C,SAAA;KACF;AAaF;;ACrLK,MAAO,oBAAqB,SAAQ,aAA2D,CAAA;IAYnG,WAAY,CAAA,KAAwB,EAAE,OAAoB,EAAA;AACxD,QAAA,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;AAZf,QAAA,IAAA,CAAA,iBAAiB,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAA;AAC9C,QAAA,IAAA,CAAA,wBAAwB,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAA;AAC5D,QAAA,IAAA,CAAA,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AAChC,QAAA,IAAA,CAAA,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;QACtC,IAAS,CAAA,SAAA,GAAG,SAAS,EAA8B,CAAA;QACnD,IAAQ,CAAA,QAAA,GAAiC,EAAE,CAAA;QAC3C,IAAgB,CAAA,gBAAA,GAAiC,EAAE,CAAA;AACnD,QAAA,IAAA,CAAA,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;AA8K9C,QAAA,IAAA,CAAA,gBAAgB,GAAG,CAAC,UAA0B,KAAI;AAChD,YAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,CAAC,CAAA;AAC/B,SAAC,CAAA;AAED,QAAA,IAAA,CAAA,eAAe,GAAG,CAAC,SAAwB,KAAI;AAC7C,YAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;YAC1B,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;AACpC,SAAC,CAAA;AAED,QAAA,IAAA,CAAA,qBAAqB,GAAG,CAAC,mBAAmB,KAAI;YAC9C,IAAI,CAAC,QAAQ,CAAC;gBACZ,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC;AACpD,aAAA,CAAC,CAAA;AACJ,SAAC,CAAA;;;;AAUD,QAAA,IAAA,CAAA,uBAAuB,GAAG,CAAC,UAAkB,KAAI;AAC/C,YAAA,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAA;AACnC,YAAA,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,CAAA;AACpC,SAAC,CAAA;AAED,QAAA,IAAA,CAAA,mBAAmB,GAAG,CAAC,OAA4C,KAAI;AACrE,YAAA,IAAI,EAAE,SAAS,EAAE,GAAG,IAAI,CAAA;AACxB,YAAA,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAA;YACnC,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,UAAU,CAAA;AAE/C,YAAA,IAAI,SAAS,EAAE;AACb,gBAAA,IAAI,KAAK,EAAE;oBACT,IAAI,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAA;AAC5D,oBAAA,IAAI,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,CAAA;oBAE/B,IAAI,KAAK,IAAI,IAAI,EAAE;wBACjB,IAAI,SAAS,IACV,OAAO,CAAC,UAAU,IAAI,IAAI;AACzB,4BAAA,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,UAAU;AAC7C,4BAAA,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;yBACtB,CAAA;AACH,wBAAA,MAAM,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAA;AACtC,qBAAA;AACF,iBAAA;AAED,gBAAA,OAAO,IAAI,CAAA;AACZ,aAAA;AACD,YAAA,OAAO,IAAI,CAAA;AACb,SAAC,CAAA;;;AA8BD,QAAA,IAAA,CAAA,oBAAoB,GAAG,CAAC,SAAmB,KAAI;YAC7C,IAAI,CAAC,QAAQ,CAAC;AACZ,gBAAA,oBAAoB,EAAE,SAAS;AAChC,aAAA,CAAC,CAAA;AACJ,SAAC,CAAA;QA5PC,IAAI,CAAC,KAAK,GAAG;AACX,YAAA,iBAAiB,EAAE,OAAO,CAAC,OAAO,CAAC,iBAAiB;AACpD,YAAA,oBAAoB,EAAE,EAAE;SACzB,CAAA;KACF;IAED,MAAM,GAAA;QACJ,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;AACpC,QAAA,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAA;QACnC,IAAI,EAAE,oBAAoB,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;QAErH,IAAI,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAC9C,KAAK,CAAC,WAAW,EACjB,OAAO,CAAC,OAAO,EACf,OAAO,EACP,OAAO,CAAC,oBAAoB,CAC7B,CAAA;AAED,QAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAC/C,KAAK,CAAC,aAAa,EACnB,UAAU,EACV,UAAU,EACV,WAAW,EACX,KAAK,CAAC,wBAAwB,EAC9B,OAAO,CAAC,0BAA0B,CACnC,CAAA;AAED,QAAA,IAAI,EAAE,YAAY,EAAE,GAAG,OAAO,CAAA;AAC9B,QAAA,IAAI,QAAQ,GAAG,aAAa,CAAC,YAAY,EAAE,YAAY,IAAI,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC,CAAC,CAAA;AAE1G,QAAA,QACE,aAAA,CAAC,aAAa,EAAA,EACZ,SAAS,EAAE;gBACT,sBAAsB;AACtB,gBAAA,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,2BAA2B;gBACzD,aAAa;AACb,gBAAA,OAAO,CAAC,YAAY,KAAK,KAAK;AAC5B,oBAAA,8BAA8B;oBAC9B,6BAA6B;aAChC,EACD,QAAQ,EAAE,QAAQ,EAAA;YAElB,aAAC,CAAA,0BAA0B,IACzB,GAAG,EAAE,IAAI,CAAC,SAAS,EACnB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,eAAe,EACb,oBAAoB,CAAC,QAAQ,EAAE,KAAK,CAAC,oBAAoB,EAAE,EAAE,CAAC,EAEhE,qBAAqB,EAAE,CAAC,UAAoC,MAC1D,aAAC,CAAA,iBAAiB;AAChB,kBAAA,EAAA,oBAAoB,EAAE,oBAAoB,EAC1C,QAAQ,EAAE,QAAQ,EAClB,gBAAgB,EAAE,IAAI,CAAC,oBAAoB,EAC3C,eAAe,EAAE,UAAU,CAAC,cAAc,EAAA,CAC1C,CACH,EACD,mBAAmB,EAAE,CAAC,UAAoC,MACxD,cAAC,QAAQ,EAAA,IAAA,EACN,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC,cAAc,CAAC,CACjE,CACZ,EACD,QAAQ,EAAE,QAAQ,EAClB,iBAAiB,EAAE,CAAC,UAAoC,MACtD,aAAC,CAAA,cAAc,EACb,EAAA,WAAW,EAAE,UAAU,CAAC,WAAW,EACnC,YAAY,EAAE,UAAU,CAAC,YAAY,EACrC,aAAa,EAAE,UAAU,CAAC,aAAa,EACvC,iBAAiB,EAAE,UAAU,CAAC,iBAAiB,EAC/C,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,YAAY,EAAE,YAAY,EAC1B,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,eAAe,EAAE,UAAU,CAAC,cAAc,EAC1C,iBAAiB,EAAE,YAAY,GAAG,IAAI,GAAG,IAAI,CAAC,qBAAqB,EACnE,CAAA,CACH,EACD,eAAe,EAAE,CAAC,UAAoC,MACpD,aAAC,CAAA,oBAAoB,EACnB,EAAA,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,WAAW,EAAE,UAAU,CAAC,WAAW,EACnC,YAAY,EAAE,UAAU,CAAC,YAAY,EACrC,aAAa,EAAE,UAAU,CAAC,aAAa,EACvC,iBAAiB,EAAE,UAAU,CAAC,iBAAiB,EAC/C,UAAU,EAAE,UAAU,CAAC,UAAU,EACjC,YAAY,EAAE,YAAY,EAC1B,QAAQ,EAAE,QAAQ,EAClB,aAAa,EAAE,KAAK,CAAC,aAAa,EAClC,aAAa,EAAE,KAAK,CAAC,aAAa,EAClC,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,cAAc,EAAE,KAAK,CAAC,cAAc,EACpC,SAAS,EAAE,KAAK,CAAC,SAAS,EAC1B,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,aAAa,EAAE,KAAK,CAAC,aAAa,EAClC,gBAAgB,EAAE,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAClD,eAAe,EAAE,UAAU,CAAC,cAAc,EAC1C,YAAY,EAAE,IAAI,CAAC,gBAAgB,EACnC,WAAW,EAAE,IAAI,CAAC,eAAe,EACjC,mBAAmB,EAAE,IAAI,CAAC,uBAAuB,EACjD,iBAAiB,EAAE,UAAU,CAAC,qBAAqB,EACnD,CAAA,CACH,EACD,CAAA,CACY,EACjB;KACF;AAED,IAAA,qBAAqB,CAAC,KAAmC,EAAE,QAAmB,EAAE,cAAwB,EAAA;QACtG,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,KAAI;YAC/B,IAAK,IAAkB,CAAC,KAAK,EAAE;gBAC7B,QACE,cAAC,mBAAmB,EAAA,EAClB,GAAG,EAAE,IAAI,CAAC,EAAE,EACZ,EAAE,EAAE,IAAI,CAAC,EAAE,EACX,iBAAiB,EAAE,QAAQ,CAAC,MAAM,EAClC,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,KAAK,EAAG,IAAkB,CAAC,KAAK,EAChC,WAAW,EAAE,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,EAAA,CACxC,EACH;AACF,aAAA;YAED,IAAK,IAAqB,CAAC,QAAQ,EAAE;gBACnC,QACE,aAAC,CAAA,cAAc,EACb,EAAA,GAAG,EAAE,IAAI,CAAC,EAAE,EACZ,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAG,IAAqB,CAAC,QAAQ,EACzC,KAAK,EAAG,IAAqB,CAAC,KAAK,EACnC,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,WAAW,EAAG,IAAqB,CAAC,WAAW,EAC/C,QAAQ,EAAG,IAAqB,CAAC,QAAQ,EACzC,WAAW,EAAE,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,EACxC,CAAA,EACH;AACF,aAAA;AAED,YAAA,OAAO,IAAI,CAAA;AACb,SAAC,CAAC,CAAA;KACH;IAED,iBAAiB,GAAA;AACf,QAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAA;AACrC,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;KACpF;IAED,uBAAuB,GAAA;QACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACxB,OAAO,EAAE,cAAc,EAAE,IAAI,CAAC,mBAAmB,EAAE,EAAE,CAAA;AACtD,SAAA;AACD,QAAA,OAAO,EAAE,CAAA;KACV;AAED,IAAA,kBAAkB,CAAC,SAA4B,EAAE,SAAoC,EAAE,QAAsC,EAAA;AAC3H,QAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAA;AAErC,QAAA,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;QAE7E,IAAI,QAAQ,CAAC,cAAc,EAAE;YAC3B,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAA;AAClD,SAAA;KACF;IAED,oBAAoB,GAAA;AAClB,QAAA,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAA;KAC9B;AAiBD,IAAA,2BAA2B,CAAC,YAAiC,EAAA;QAC3D,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,IAAI,CAAC,IAAI,YAAY,CAAC,aAAa,EAAE,CAAA;KAC1F;IAoCD,mBAAmB,GAAA;AACjB,QAAA,IAAI,EAAE,SAAS,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAA;AAE1C,QAAA,IAAI,SAAS,EAAE;AACb,YAAA,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAA;AACnC,YAAA,IAAI,SAAS,GAAG,SAAS,CAAC,OAAO,CAAA;AACjC,YAAA,IAAI,SAAS,GAAG,MAAM,CAAC,iBAAiB,EAAE,CAAA;YAC1C,IAAI,MAAM,GAAG,EAAS,CAAA;AAEtB,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AAC5C,gBAAA,IAAI,OAAO,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAA;gBACjC,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAA;gBAEvC,IAAI,QAAQ,GAAG,CAAC,EAAE;AAChB,oBAAA,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,EAAE,CAAA;AACzB,oBAAA,MAAM,CAAC,UAAU,GAAG,QAAQ,CAAA;oBAC5B,MAAK;AACN,iBAAA;AACF,aAAA;AAED,YAAA,OAAO,MAAM,CAAA;AACd,SAAA;AACD,QAAA,OAAO,IAAI,CAAA;KACZ;AAUF,CAAA;AAED,oBAAoB,CAAC,gBAAgB,CAAC;AACpC,IAAA,oBAAoB,EAAE,aAAa;AACpC,CAAA,CAAC,CAAA;AAEF,SAAS,aAAa,CAAC,QAAsC,EAAA;IAC3D,IAAI,YAAY,GAA6B,EAAE,CAAA;AAE/C,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QAC3C,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;AACjC,KAAA;AAED,IAAA,OAAO,YAAY,CAAA;AACrB,CAAC;AAED,SAAS,oBAAoB,CAAC,QAAmB,EAAE,YAAsB,EAAE,gBAA6B,EAAE,EAAA;IACxG,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM;QACnC,SAAS,EAAE,OAAO,CAAC,MAAM,GAAG,aAAa,GAAG,EAAE;QAC9C,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,IAAI,aAAa;AACzD,KAAA,CAAC,CAAC,CAAA;AACL,CAAC;AAED,SAAS,UAAU,CAAC,KAAmC,EAAA;AACrD,IAAA,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;QACtB,IAAK,IAAkB,CAAC,KAAK,EAAE;AAC7B,YAAA,OAAO,IAAI,CAAA;AACZ,SAAA;QAED,IAAK,IAAqB,CAAC,QAAQ,EAAE;YACnC,IAAK,IAAqB,CAAC,WAAW,EAAE;AACtC,gBAAA,OAAO,IAAI,CAAA;AACZ,aAAA;AACF,SAAA;AACF,KAAA;AAED,IAAA,OAAO,KAAK,CAAA;AACd,CAAC;AAED,SAAS,iBAAiB,CAAC,OAA2B,EAAA;AACpD,IAAA,IAAI,WAAW,GAAc,OAAO,CAAC,mBAAmB,IAAI,EAAE,CAAA;IAC9D,IAAI,oBAAoB,GAAG,IAAI,CAAA;AAE/B,IAAA,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;QACvB,WAAW,CAAC,IAAI,CAAC;YACf,gBAAgB,EAAE,OAAO,CAAC,4BAA4B;AACtD,YAAA,aAAa,EAAE,OAAO,CAAC,yBAAyB,IAAI,WAAW;YAC/D,cAAc,EAAE,OAAO,CAAC,0BAA0B;YAClD,iBAAiB,EAAE,OAAO,CAAC,6BAA6B;AACzD,SAAA,CAAC,CAAA;AACH,KAAA;AAAM,SAAA,IAAI,OAAO,CAAC,yBAAyB,EAAE;AAC5C,QAAA,oBAAoB,GAAG;YACrB,gBAAgB,EAAE,OAAO,CAAC,4BAA4B;YACtD,aAAa,EAAE,OAAO,CAAC,yBAAyB;YAChD,cAAc,EAAE,OAAO,CAAC,0BAA0B;YAClD,iBAAiB,EAAE,OAAO,CAAC,6BAA6B;SACzD,CAAA;AACF,KAAA;IAED,IAAI,aAAa,GAAc,EAAE,CAAA;AACjC,IAAA,IAAI,aAAa,GAAc,EAAE,CAAA;IACjC,IAAI,UAAU,GAAgB,EAAE,CAAA;IAChC,IAAI,WAAW,GAAG,KAAK,CAAA;AAEvB,IAAA,KAAK,IAAI,OAAO,IAAI,WAAW,EAAE;QAC/B,IAAI,OAAO,CAAC,KAAK,EAAE;YACjB,aAAa,CAAC,IAAI,CACb,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAO,KACV,cAAc,EAAE,OAAO,CAAC,cAAc,IAAI,OAAO,CAAC,4BAA4B,EAC9E,WAAW,EAAE,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,yBAAyB,EACrE,YAAY,EAAE,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,0BAA0B,EACxE,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,OAAO,CAAC,4BAA4B,EAAA,CAAA,CAChF,CAAA;AACH,SAAA;AAAM,aAAA;AACL,YAAA,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AAC5B,SAAA;AACF,KAAA;;AAGD,IAAA,IAAI,WAAW,GAAG,aAAa,CAAC,CAAC,CAAC,CAAA;AAClC,IAAA,WAAW,CAAC,MAAM,GAAG,IAAI,CAAA;IACzB,WAAW,CAAC,cAAc,GAAG,WAAW,CAAC,cAAc,IAAI,OAAO,CAAC,uBAAuB,CAAA;IAC1F,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,IAAI,OAAO,CAAC,oBAAoB,CAAA;IACjF,WAAW,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,IAAI,OAAO,CAAC,qBAAqB,CAAA;IACpF,WAAW,CAAC,eAAe,GAAG,WAAW,CAAC,eAAe,IAAI,OAAO,CAAC,wBAAwB,CAAA;IAE7F,IAAI,aAAa,CAAC,MAAM,EAAE;QACxB,UAAU,GAAG,aAAa,CAAA;QAC1B,WAAW,GAAG,IAAI,CAAA;AACnB,KAAA;AAAM,SAAA;AACL,QAAA,IAAI,WAAW,GAAG,OAAO,CAAC,kBAAkB,CAAA;AAC5C,QAAA,IAAI,WAAW,EAAE;YACf,UAAU,CAAC,IAAI,CAAC;AACd,gBAAA,KAAK,EAAE,WAAW;gBAElB,eAAe,EAAE,OAAO,CAAC,4BAA4B;gBACrD,YAAY,EAAE,OAAO,CAAC,yBAAyB;gBAC/C,aAAa,EAAE,OAAO,CAAC,0BAA0B;gBACjD,gBAAgB,EAAE,OAAO,CAAC,6BAA6B;gBAEvD,cAAc,EAAE,OAAO,CAAC,2BAA2B;gBACnD,WAAW,EAAE,OAAO,CAAC,wBAAwB;gBAC7C,YAAY,EAAE,OAAO,CAAC,yBAAyB;gBAC/C,eAAe,EAAE,OAAO,CAAC,4BAA4B;AACtD,aAAA,CAAC,CAAA;AACH,SAAA;AACF,KAAA;AAED,IAAA,IAAI,aAAa,GAAG,OAAO,CAAC,aAAa,IAAI,sBAAsB,CAAA;IACnE,IAAI,eAAe,GAAG,EAAE,CAAA;AAExB,IAAA,KAAK,IAAI,SAAS,IAAI,aAAa,EAAE;QACnC,IAAI,OAAO,GAAG,KAAK,CAAA;AACnB,QAAA,KAAK,IAAI,SAAS,IAAI,UAAU,EAAE;AAChC,YAAA,IAAI,SAAS,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK,EAAE;gBACvC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAA;gBACjC,OAAO,GAAG,IAAI,CAAA;gBACd,MAAK;AACN,aAAA;AACF,SAAA;QACD,IAAI,CAAC,OAAO,EAAE;AACZ,YAAA,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;AAChC,SAAA;AACF,KAAA;IAED,OAAO;QACL,oBAAoB;QACpB,WAAW;QACX,UAAU;AACV,QAAA,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,aAAa,CAAC;AAC7C,QAAA,UAAU,EAAE,eAAe;KAC5B,CAAA;AACH;;;;"}