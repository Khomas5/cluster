{"version":3,"file":"internal.js","sources":["../src/ResourceDayTimeColsJoiner.ts","../src/ResourceDayTimeCols.tsx","../src/ResourceDayTimeColsView.tsx"],"sourcesContent":["import { TimeColsSeg } from '@fullcalendar/timegrid/internal'\nimport { AbstractResourceDayTableModel, VResourceJoiner } from '@fullcalendar/resource/internal'\n\nexport class ResourceDayTimeColsJoiner extends VResourceJoiner<TimeColsSeg> {\n  transformSeg(seg: TimeColsSeg, resourceDayTable: AbstractResourceDayTableModel, resourceI: number): TimeColsSeg[] {\n    return [\n      {\n        ...seg,\n        col: resourceDayTable.computeCol(seg.col, resourceI),\n      },\n    ]\n  }\n}\n","import { CssDimValue, Duration } from '@fullcalendar/core'\nimport {\n  mapHash, DateSpan, DateComponent, EventStore, EventUiHash, EventInteractionState, memoize, DateRange,\n  DateMarker, Hit, NowTimer, DateProfile,\n} from '@fullcalendar/core/internal'\nimport {\n  createElement, createRef, VNode,\n} from '@fullcalendar/core/preact'\nimport { DayTimeColsSlicer, TimeCols, buildDayRanges, TimeSlatMeta, TimeColsSlatsCoords } from '@fullcalendar/timegrid/internal'\nimport { AbstractResourceDayTableModel, VResourceSplitter } from '@fullcalendar/resource/internal'\nimport { ResourceDayTimeColsJoiner } from './ResourceDayTimeColsJoiner.js'\n\nexport interface ResourceDayTimeColsProps {\n  dateProfile: DateProfile\n  resourceDayTableModel: AbstractResourceDayTableModel\n  axis: boolean\n  slotDuration: Duration\n  slatMetas: TimeSlatMeta[]\n  businessHours: EventStore\n  eventStore: EventStore\n  eventUiBases: EventUiHash\n  dateSelection: DateSpan | null\n  eventSelection: string\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n  tableColGroupNode: VNode\n  tableMinWidth: CssDimValue\n  clientWidth: number | null\n  clientHeight: number | null\n  expandRows: boolean\n  onScrollTopRequest?: (scrollTop: number) => void\n  forPrint: boolean\n  onSlatCoords?: (slatCoords: TimeColsSlatsCoords) => void\n}\n\nexport class ResourceDayTimeCols extends DateComponent<ResourceDayTimeColsProps> {\n  private buildDayRanges = memoize(buildDayRanges)\n  private dayRanges: DateRange[] // for now indicator\n  private splitter = new VResourceSplitter()\n  private slicers: { [resourceId: string]: DayTimeColsSlicer } = {}\n  private joiner = new ResourceDayTimeColsJoiner()\n  private timeColsRef = createRef<TimeCols>()\n\n  render() {\n    let { props, context } = this\n    let { dateEnv, options } = context\n    let { dateProfile, resourceDayTableModel } = props\n\n    let dayRanges = this.dayRanges = this.buildDayRanges(resourceDayTableModel.dayTableModel, dateProfile, dateEnv)\n    let splitProps = this.splitter.splitProps(props)\n\n    this.slicers = mapHash(splitProps, (split, resourceId) => this.slicers[resourceId] || new DayTimeColsSlicer())\n    let slicedProps = mapHash(this.slicers, (slicer, resourceId) => slicer.sliceProps(\n      splitProps[resourceId],\n      dateProfile,\n      null,\n      context,\n      dayRanges,\n    ))\n\n    return ( // TODO: would move this further down hierarchy, but sliceNowDate needs it\n      <NowTimer unit={options.nowIndicator ? 'minute' : 'day'}>\n        {(nowDate: DateMarker, todayRange: DateRange) => (\n          <TimeCols\n            ref={this.timeColsRef}\n            {...this.joiner.joinProps(slicedProps, resourceDayTableModel)}\n            dateProfile={dateProfile}\n            axis={props.axis}\n            slotDuration={props.slotDuration}\n            slatMetas={props.slatMetas}\n            cells={resourceDayTableModel.cells[0]}\n            tableColGroupNode={props.tableColGroupNode}\n            tableMinWidth={props.tableMinWidth}\n            clientWidth={props.clientWidth}\n            clientHeight={props.clientHeight}\n            expandRows={props.expandRows}\n            nowDate={nowDate}\n            nowIndicatorSegs={options.nowIndicator && this.buildNowIndicatorSegs(nowDate)}\n            todayRange={todayRange}\n            onScrollTopRequest={props.onScrollTopRequest}\n            forPrint={props.forPrint}\n            onSlatCoords={props.onSlatCoords}\n            isHitComboAllowed={this.isHitComboAllowed}\n          />\n        )}\n      </NowTimer>\n    )\n  }\n\n  isHitComboAllowed = (hit0: Hit, hit1: Hit) => {\n    let allowAcrossResources = this.dayRanges.length === 1\n    return allowAcrossResources || hit0.dateSpan.resourceId === hit1.dateSpan.resourceId\n  }\n\n  buildNowIndicatorSegs(date: DateMarker) {\n    let nonResourceSegs = this.slicers[''].sliceNowDate(date, this.context, this.dayRanges)\n    return this.joiner.expandSegs(this.props.resourceDayTableModel, nonResourceSegs)\n  }\n}\n","import { DateProfileGenerator, memoize, DateProfile, ChunkContentCallbackArgs, CalendarContext } from '@fullcalendar/core/internal'\nimport { createElement } from '@fullcalendar/core/preact'\nimport { TimeColsView, buildTimeColsModel, buildSlatMetas } from '@fullcalendar/timegrid/internal'\nimport {\n  ResourceDayHeader, ResourceDayTableModel, DayResourceTableModel, ResourceViewProps,\n  Resource, flattenResources, DEFAULT_RESOURCE_ORDER,\n} from '@fullcalendar/resource/internal'\nimport { ResourceDayTable } from '@fullcalendar/resource-daygrid/internal'\nimport { ResourceDayTimeCols } from './ResourceDayTimeCols.js'\n\nexport class ResourceDayTimeColsView extends TimeColsView {\n  props: ResourceViewProps\n\n  private flattenResources = memoize(flattenResources)\n  private buildResourceTimeColsModel = memoize(buildResourceTimeColsModel)\n  private buildSlatMetas = memoize(buildSlatMetas)\n\n  render() {\n    let { props, context } = this\n    let { options, dateEnv } = context\n    let { dateProfile } = props\n\n    let splitProps = this.allDaySplitter.splitProps(props)\n    let resourceOrderSpecs = options.resourceOrder || DEFAULT_RESOURCE_ORDER\n    let resources = this.flattenResources(props.resourceStore, resourceOrderSpecs)\n    let resourceDayTableModel = this.buildResourceTimeColsModel(\n      dateProfile,\n      context.dateProfileGenerator,\n      resources,\n      options.datesAboveResources,\n      context,\n    )\n\n    let slatMetas = this.buildSlatMetas(\n      dateProfile.slotMinTime,\n      dateProfile.slotMaxTime,\n      options.slotLabelInterval,\n      options.slotDuration,\n      dateEnv,\n    )\n    let { dayMinWidth } = options\n    let hasAttachedAxis = !dayMinWidth\n    let hasDetachedAxis = dayMinWidth\n\n    let headerContent = options.dayHeaders && (\n      <ResourceDayHeader\n        resources={resources}\n        dates={resourceDayTableModel.dayTableModel.headerDates}\n        dateProfile={dateProfile}\n        datesRepDistinctDays\n        renderIntro={hasAttachedAxis ? this.renderHeadAxis : null}\n      />\n    )\n\n    let allDayContent = (options.allDaySlot !== false) && ((contentArg: ChunkContentCallbackArgs) => (\n      <ResourceDayTable\n        {...splitProps.allDay}\n        dateProfile={dateProfile}\n        resourceDayTableModel={resourceDayTableModel}\n        nextDayThreshold={options.nextDayThreshold}\n        tableMinWidth={contentArg.tableMinWidth}\n        colGroupNode={contentArg.tableColGroupNode}\n        renderRowIntro={hasAttachedAxis ? this.renderTableRowAxis : null}\n        showWeekNumbers={false}\n        expandRows={false}\n        headerAlignElRef={this.headerElRef}\n        clientWidth={contentArg.clientWidth}\n        clientHeight={contentArg.clientHeight}\n        forPrint={props.forPrint}\n        {...this.getAllDayMaxEventProps()}\n      />\n    ))\n\n    let timeGridContent = (contentArg: ChunkContentCallbackArgs) => (\n      <ResourceDayTimeCols\n        {...splitProps.timed}\n        dateProfile={dateProfile}\n        axis={hasAttachedAxis}\n        slotDuration={options.slotDuration}\n        slatMetas={slatMetas}\n        resourceDayTableModel={resourceDayTableModel}\n        tableColGroupNode={contentArg.tableColGroupNode}\n        tableMinWidth={contentArg.tableMinWidth}\n        clientWidth={contentArg.clientWidth}\n        clientHeight={contentArg.clientHeight}\n        onSlatCoords={this.handleSlatCoords}\n        expandRows={contentArg.expandRows}\n        forPrint={props.forPrint}\n        onScrollTopRequest={this.handleScrollTopRequest}\n      />\n    )\n\n    return hasDetachedAxis\n      ? this.renderHScrollLayout(\n        headerContent,\n        allDayContent,\n        timeGridContent,\n        resourceDayTableModel.colCnt,\n        dayMinWidth,\n        slatMetas,\n        this.state.slatCoords,\n      )\n      : this.renderSimpleLayout(\n        headerContent,\n        allDayContent,\n        timeGridContent,\n      )\n  }\n}\n\nfunction buildResourceTimeColsModel(\n  dateProfile: DateProfile,\n  dateProfileGenerator: DateProfileGenerator,\n  resources: Resource[],\n  datesAboveResources: boolean,\n  context: CalendarContext,\n) {\n  let dayTable = buildTimeColsModel(dateProfile, dateProfileGenerator)\n\n  return datesAboveResources ?\n    new DayResourceTableModel(dayTable, resources, context) :\n    new ResourceDayTableModel(dayTable, resources, context)\n}\n"],"names":[],"mappings":"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"}